{"version":3,"file":"main.js","mappings":"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AAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE;YACxG,EAAE,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE;YACxG,EAAE,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE;YACxG,EAAE,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE;YACxG,EAAE,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE;YACxG,EAAE,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,U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","sources":["webpack://g0/./assets/backgrounds.png","webpack://g0/./assets/backgrounds_houses.png","webpack://g0/./assets/player.png","webpack://g0/./src/bitmap.ts","webpack://g0/./src/components.ts","webpack://g0/./src/data/runner_stages.ts","webpack://g0/./src/ecs/simple.ecs.ts","webpack://g0/./src/engine.ts","webpack://g0/./src/runnerGame.ts","webpack://g0/./src/stage.ts","webpack://g0/./src/systems.ts","webpack://g0/./src/utils.ts","webpack://g0/./src/world.ts","webpack://g0/webpack/bootstrap","webpack://g0/webpack/runtime/define property getters","webpack://g0/webpack/runtime/global","webpack://g0/webpack/runtime/hasOwnProperty shorthand","webpack://g0/webpack/runtime/make namespace object","webpack://g0/webpack/runtime/publicPath","webpack://g0/./src/index.ts"],"sourcesContent":["export default __webpack_public_path__ + \"0cf532bff767a70b1f42a0fbad6e2993.png\";","export default __webpack_public_path__ + \"8187ace7b4001245dd05b63fe2dafb86.png\";","export default __webpack_public_path__ + \"f3db62483c3871176da392987e68805e.png\";","/* Bitmap */\nexport class Bitmap {\n  readonly width: number;\n  readonly height: number;\n  protected data: Uint32Array;\n\n  /** Create new Bitmap with empty pixels\n  * @param width new Bitmap width\n  * @param height new Bitmap height */\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.data = new Uint32Array(width * height);\n  }\n\n  /** Create Bitmap from buffer\n  * @param buffer buffer with color values\n  * @param width new Bitmap width\n  * @param height new Bitmap height\n  * @returns new Bitmap */\n  public static from(buffer: ArrayBuffer, width: number, height: number): Bitmap {\n    const bitmap = new Bitmap(width, height);\n    bitmap.data = new Uint32Array(buffer);\n    return bitmap;\n  }\n\n  /** Get pixels array\n  * @returns Uint32Array which represents pixels */\n  public get pixels(): Uint32Array {\n    return this.data;\n  }\n\n  /** Draw Bitmap on self\n  * @param bitmap source Bitmap to draw\n  * @param x destination offset x\n  * @param y destination offset y\n  * @returns self */\n  public draw(bitmap: Bitmap, x: number, y: number): this {\n    const { data: dest, width: dw, height: dh } = this;\n    const { data: src,  width: sw } = bitmap;\n    let i = src.length;\n    while (i--) {\n      if (src[i] === 0) continue;\n      const px = x + (i % sw);\n      const py = y + (i / sw | 0);\n      if (px < 0 || px >= dw || py < 0 || py >= dh) continue;\n      dest[px + py * dw] = src[i];\n    }\n    return this;\n  }\n\n  /** Copy to Bitmap area of self\n  * @param bitmap destination Bitmap\n  * @param x destination offset x\n  * @param y destination offset y\n  * @param sx source offset x\n  * @param sy source offset y\n  * @param width area width to copy\n  * @param height area height to copy\n  * @returns self */\n  public copy(bitmap: Bitmap, x: number, y: number, sx: number, sy: number, width: number, height: number): this {\n    const { data: dest, width: dw, height: dh } = bitmap;\n    const { data: src,  width: sw } = this;\n    let i = width * height;\n    while (i--) {\n      const j = (sx + i % width) + (sy + (i / width | 0)) * sw;\n      if (src[j] == 0) continue;\n      const px = x + (i % width);\n      const py = y + (i / width | 0);\n      if (px < 0 || px >= dw || py < 0 || py >= dh) continue;\n      dest[px + py * dw] = src[j];\n    }\n    return this;\n  }\n\n  /** Extract pixels to new Bitmap\n  * @param x source offset x\n  * @param y source offset y\n  * @param width new Bitmap width\n  * @param height new Bitam height\n  * @returns new Bitmap */\n  public extract(x: number, y: number, width: number, height: number): Bitmap {\n    const bitmap = new Bitmap(width, height);\n    const { data: src,  width: sw, height: sh } = this;\n    const { data: dest, width: dw } = bitmap;\n    let i = dest.length;\n    while (i--) {\n      const px = x + (i % dw);\n      const py = y + (i / dw | 0);\n      if (px < 0 || px >= sw || py < 0 || py >= sh) continue;\n      dest[i] = src[px + py * sw];\n    }\n    return bitmap;\n  }\n\n  /** Clone self to new Bitmap\n  * @returns new Bitmap */\n  public clone(): Bitmap {\n    const bitmap = new Bitmap(this.width, this.height);\n    const { data: dest } = bitmap;\n    const { data: src } = this;\n    let i = dest.length;\n    while (i--) dest[i] = src[i];\n    return bitmap;\n  }\n\n  /** Fill self with color\n  * @param color color to fill\n  * @returns self */\n  public fill(color: number): this {\n    this.data.fill(color);\n    return this;\n  }\n\n  /** Vertical flip\n  * @returns self */\n  public flipV(): this {\n    const { data, width } = this;\n    let i = data.length;\n    while (i--) {\n      const px = width - (i % width) - 1;\n      if (px >=  width / 2) continue;\n      const py = i / width | 0;\n      const pi = px + py * width;\n      const temp = data[i];\n      data[i] = data[pi];\n      data[pi] = temp;\n    }\n    return this;\n  }\n\n  /** Horizontal flip\n  * @returns self */\n  public flipH(): this {\n    const { data, width, height } = this;\n    let i = data.length / 2;\n    while (i--) {\n      const px = i % width;\n      const py = height - (i / width | 0) - 1;\n      const pi = px + py * width;\n      const temp = data[i];\n      data[i] = data[pi];\n      data[pi] = temp;\n    }\n    return this;\n  }\n}\n\n/* TileableBitmap */\nexport class TileableBitmap extends Bitmap {\n  readonly twidth: number;\n  readonly theight: number;\n  readonly cols: number;\n  readonly rows: number;\n\n  /** Create new TileableBitmap with empty pixels\n  * @param twidth width of the tile\n  * @param theight height of the tile\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical */\n  constructor(twidth: number, theight: number, cols: number, rows: number) {\n    super(twidth * cols, theight * rows);\n    this.twidth = twidth;\n    this.theight = theight;\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  /** Create TileableBitmap from buffer\n  * @param buffer buffer with color values\n  * @param twidth width of the tile\n  * @param theight height of the tile\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical\n  * @returns new TileableBitmap */\n  public static from(buffer: ArrayBuffer, twidth: number, theight: number, cols: number = 1, rows: number = 1): TileableBitmap {\n    const tbitmap = new TileableBitmap(twidth, theight, cols, rows);\n    tbitmap.data = new Uint32Array(buffer);\n    return tbitmap;\n  }\n\n  /** Extract tile to new Bitmap\n  * @param col tile location by x\n  * @param row tile location by y\n  * @returns new Bitmap */\n  public extractTile(col: number, row: number): Bitmap {\n    return this.extract(\n      col * this.twidth,\n      row * this.theight,\n      this.twidth,\n      this.theight,\n    );\n  }\n\n  /** Copy to Bitmap one tile of self\n  * @param bitmap destination Bitmap\n  * @param x destination offset x\n  * @param y destination offset y\n  * @param col tile location by x\n  * @param row tile location by y\n  * @returns self */\n  public copyTile(bitmap: Bitmap, x: number, y: number, col: number, row: number): this {\n    return this.copy(\n      bitmap, x, y,\n      col * this.twidth,\n      row * this.theight,\n      this.twidth,\n      this.theight,\n    );\n  }\n\n  /** Split TileableBitmap to array of Bitmaps\n  * @returns array of Bitmaps */\n  public split(): Bitmap[] {\n    const bitmaps: Bitmap[] = [];\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.cols; col++) {\n        const x = col * this.twidth;\n        const y = row * this.theight;\n        bitmaps.push(this.extract(x, y, this.twidth, this.twidth));\n      }\n    }\n    return bitmaps;\n  }\n\n  /** Create new TileableBitmap by reordering tiles of self\n  * @param order indexes of source tiles by col * row\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical\n  * @returns new TileableBitmap */\n  public reorder(order: number[], cols: number, rows: number): TileableBitmap {\n    const { twidth, theight, cols: scols } = this;\n    const tbitmap = new TileableBitmap(twidth, theight, cols, rows);\n    let i = cols * rows;\n    while(i--) {\n      const j = order[i];\n      const [dc, dr] = [i % cols, i / cols | 0];\n      const [sc, sr] = [j % scols, j / scols | 0];\n      this.copyTile(tbitmap, dc * twidth, dr * theight, sc, sr);\n    }\n    return tbitmap;\n  }\n}\n\n/* BitmapPallete */\nexport class BitmapPallete {\n  private palleteData: Uint32Array;\n  readonly palleteMap: Uint8Array;\n  readonly bitmap: Bitmap;\n\n  /** Create new BitmapPallete attached to Bitmap\n  * @param bitmap source Bitmap */\n  constructor(bitmap: Bitmap) {\n    this.bitmap = bitmap;\n    const pixels = bitmap.pixels;\n    const map = [] as number[];\n    const colors = [] as number[];\n    let i = pixels.length;\n    while (i--) {\n      const pixel = pixels[i];\n      const idx = colors.indexOf(pixel);\n      if (idx < 0) {\n        map[i] = colors.length;\n        colors.push(pixel);\n      } else map[i] = idx;\n    }\n    this.palleteMap = new Uint8Array(map);\n    this.palleteData = new Uint32Array(colors);\n  }\n\n  /** Get pallete as array of numbers\n  * @returns colors */\n  public get colors(): number[] {\n    return Array.from(this.palleteData);\n  }\n\n  /** Set new pallete and apply on source Bitmap\n  * @param pallete new pallete to apply */\n  public set colors(pallete: number[]) {\n    const length = this.palleteData.length;\n    this.palleteData.set(pallete.slice(0, length));\n    this.remap();\n  }\n\n  /** Apply pallete on source Bitmap */\n  protected remap(): void {\n    const { \n      bitmap: { pixels },\n      palleteData,\n      palleteMap,\n    } = this;\n    let i = pixels.length;\n    while (i--) pixels[i] = palleteData[palleteMap[i]];\n  }\n}\n","import { Bitmap } from \"./bitmap\";\nimport { Component } from \"./ecs/simple.ecs\";\n\nconsole.debug(\"COMPONENTS: definitions\");\n\nexport const cPosition = new Component<{ x: number; y: number }>({\n  x: 0,\n  y: 0,\n});\n\nexport const cVelocity = new Component<{ vx: number; vy: number }>({\n  vx: 0,\n  vy: 0,\n});\n\nexport const cShape = new Component<{ w: number; h: number }>({\n  w: 0,\n  h: 0,\n});\n\nexport const cSprite = new Component<{\n  spriteIdx: number;\n  sprites: Bitmap[];\n  flipped?: boolean;\n  offsetX?: number,\n  offsetY?: number,\n}>({\n  spriteIdx: 0,\n  sprites: [],\n  flipped: false,\n  offsetX: 0,\n  offsetY: 0\n});\n\nexport const cAnimation = new Component<{\n  animations: number[][];\n  current: number;\n  length: number;\n  time: number;\n  coef: number;\n}>({\n  animations: [[]],\n  current: 0,\n  length: 0,\n  time: 0,\n  coef: 0,\n});\n\nexport const cInput = new Component<{ keys: Set<string> }>({\n  keys: new Set(),\n});\n\nexport const cInputRunner = new Component<{\n  actions: Set<String>,\n  jumping: boolean,\n  acceleration: number,\n}>({\n  actions: new Set(),\n  jumping: false,\n  acceleration: 0,\n});\n\nexport const cPlayer = new Component<{ air: boolean; speed: number; power: number }>({\n  air: false,\n  speed: 0,\n  power: 0,\n});\n\nexport const c2AnimatedBg = new Component<{\n}>({\n\n});\n\n// export const cWorld = new Component<{\n//   time?: number,\n//   width: number,\n//   height: number,\n//   gravity: number,\n//   friction: number,\n//   viewport: Bitmap,\n// }>({\n//   time: 0,\n//   width: 0,\n//   height: 0,\n//   gravity: 0,\n//   friction: 0,\n//   viewport: new Bitmap(0, 0),\n// });\n","import { StageConfig } from \"../stage\";\n\nexport default [\n  {\n    name: \"MorningCity\", bgwidth: 10, length: 2000,\n    bgfill: 0xfff5ca75, fgfill: 0xff002200,\n    bgrows: [\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.5, speed: 1.0, colors: [0x00000000, 0xffe5aa45, 0xffeac770] },\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.0, speed: 2.0, colors: [0x00000000, 0xffd59a55, 0xffb57a35] },\n      { layout: [2,2,2,2,2,2,2,2,2,2], offset: 2.5, speed: 2.0, colors: [0xff556622, 0x00000000, 0x00000000] },\n      { layout: [2,2,2,2,2,2,2,2,2,2], offset: 3.0, speed: 3.0, colors: [0xff445522, 0x00000000, 0x00000000] },\n      { layout: [3,3,3,3,3,3,3,3,3,3], offset: 3.5, speed: 3.5, colors: [0xff33312e, 0x00000000, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 4.0, speed: 4.0, colors: [0xff222120, 0xff303030, 0x00000000] },\n    ],\n  },\n  {\n    name: \"SunsetCity\", bgwidth: 10, length: 3000,\n    bgfill: 0xff4499fd, fgfill: 0xff202122,\n    bgrows: [\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.5, speed: 1.0, colors: [0x00000000, 0xff3366ee, 0xff2244aa] },\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.0, speed: 2.0, colors: [0x00000000, 0xff113388, 0xff2255bb] },\n      { layout: [2,2,2,2,2,2,2,2,2,2], offset: 2.5, speed: 2.0, colors: [0xff40424b, 0x00000000, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 3.0, speed: 3.0, colors: [0xff303236, 0xff206090, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 3.5, speed: 3.5, colors: [0xff28292b, 0xff206090, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 4.0, speed: 4.0, colors: [0xff202122, 0xff206090, 0x00000000] },\n    ],\n  },\n  {\n    name: \"NightCity\", bgwidth: 10, length: 5000,\n    bgfill: 0xff361d20, fgfill: 0xff2b1b1b,\n    bgrows: [\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.5, speed: 1.0, colors: [0x00000000, 0xff402026, 0xff6a3e4f] },\n      { layout: [0,0,0,0,0,0,0,0,0,0], offset: 0.0, speed: 2.0, colors: [0x00000000, 0xff683b46, 0xff321e1e] },\n      { layout: [4,4,5,4,4,4,5,4,3,3], offset: 2.5, speed: 2.0, colors: [0xff2b1b1b, 0x00000000, 0x00000000] },\n      { layout: [5,5,4,4,4,4,5,4,4,4], offset: 3.0, speed: 3.0, colors: [0xff2d1f1e, 0xff304090, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 3.5, speed: 3.5, colors: [0xff302422, 0xff5060a0, 0x00000000] },\n      { layout: [5,5,5,5,5,5,5,5,5,5], offset: 4.0, speed: 4.0, colors: [0xff362824, 0xff80a0f0, 0x00000000] },\n    ],\n  }\n] as StageConfig[];\n","export type Immutable<T> = { +readonly [K in keyof T]: T[K] };\nexport type Mutable<T> = { -readonly [K in keyof T]: T[K] };\n\nexport type ComponentList<T> = Record<string, Component<T>>;\n\n/* EntityManager */\nexport class EntityManager<C extends ComponentList<any>> {\n  private idx = 0;\n  /** Create new Entity Manager\n  * @param components components dictionary */\n  constructor(private components: C) {}\n\n  /** Add new entity with properties for components\n  * @param components components entity have\n  * @returns entity index */\n  add<K extends keyof C>(components: Record<K, typeof this.components[K][\"schema\"]>): number {\n    const entries = Object.entries(components);\n    for (const [componentName, component] of entries){\n      this.components[componentName].set(this.idx, component);\n    }\n    return this.idx++;\n  }\n\n  /** Assign new properties for components for entity\n  * @param idx entity index\n  * @param components new components values\n  * @returns entity index */\n  set<K extends keyof C>(idx: number, components: { [P in K]: C[P][\"schema\"] }): number {\n    const entries = Object.entries(this.components);\n    for (const [componentName, component] of entries) {\n      component.set(idx, components?.[componentName] || {});\n    }\n    return idx;\n  }\n\n  /** Build readonly object of all entity components\n  * @param idx entity index\n  * @returns readonly entity object */\n  get<K extends keyof C>(idx: number): Immutable<{ [P in K]: C[P][\"schema\"] }> {\n    const entries = Object.entries(this.components);\n    const result = {} as { [P in K]: C[P][\"schema\"] };\n    for (const [componentName, component] of entries){\n      result[componentName] = component.get(idx);\n    }\n    return result;\n  }\n\n  /** Reset Entity Manager and remove all entities data */\n  reset(): void {\n    const components = Object.values(this.components);\n    for (const component of components) component.reset();\n    this.idx = 0;\n  }\n}\n\n/* Component */\nexport type Storage<T> = { [K in keyof T]: T[K][] };\nexport class Component<T extends Object> {\n  readonly schema: Immutable<T>;\n  readonly storage: Immutable<Storage<T>>;\n  /** Create new Component\n  * @param schema Plain object with properties */\n  constructor(schema: T) {\n    this.schema = schema;\n    this.storage = Object.keys(schema).reduce(\n      (acc, key) => ({ ...acc, [key]: [] }),\n      {} as Storage<T>,\n    );\n  }\n\n  /** Build readonly object of Component element\n  * @param idx entity index\n  * @returns readonly Component object */\n  get(idx: number): Immutable<T> {\n    const { storage } = this;\n    const element = {} as T;\n    for (const prop in storage) element[prop] = storage[prop][idx];\n    return element;\n  }\n\n  /** Assign new values for Component element\n  * @param idx entity index\n  * @param data new values\n  * @returns entity index */\n  set(idx: number, data: T): number {\n    const { storage } = this;\n    for (const prop in storage) storage[prop][idx] = data[prop] || this.schema[prop];\n    return idx;\n  }\n\n  /** Reset Component storage */\n  reset(): void {\n    const { storage } = this;\n    for (const prop in storage) storage[prop].length = 0;\n  }\n}\n\n/* System */\nexport type SystemHandler<T> = (\n  dt: number,\n  components: T,\n  ...entities: number[][]\n) => void;\nexport type SystemCallback = (dt?: number) => void;\nexport class System<T extends Record<string, Component<any>>> {\n  /** Create new System\n  * @param components components to use in the System\n  * @param handler callback with access to components */\n  constructor(\n    readonly components: T,\n    private handler: SystemHandler<T>,\n  ) {}\n\n  /** Create callback to execute the System\n  * @param entityGroups array of entity groups assigned to the System\n  * @returns callback */\n  setup(...entityGroups: number[][]): SystemCallback {\n    return (dt) => this.handler(dt, this.components, ...entityGroups);\n  }\n}\n","import { timeHelpers } from \"./utils\";\nexport type EngineHandler = (dt: number, time: number) => void;\n\nexport class Engine {\n  protected timestamp: number = 0;\n  protected running: boolean = false;\n\n  constructor(\n    protected rate: number,\n    protected update: EngineHandler,\n    protected render: EngineHandler,\n    readonly deltaCoef: number = 0.05,\n  ) {}\n\n  start() {\n    if (this.running) return;\n    this.running = true;\n    this.tick();\n  }\n\n  stop() {\n    this.running = false;\n  }\n\n  isRunning() {\n    return this.running;\n  }\n\n  getTimestamp() {\n    return this.timestamp;\n  }\n\n  protected async tick() {\n    while (this.running) {\n      const now = timeHelpers.now();\n      const dt = (now - this.timestamp) * this.deltaCoef;\n      const time = now * this.deltaCoef;\n      this.timestamp = now;\n      await timeHelpers.sleep(this.rate);\n      this.update(dt, time)\n      this.render(dt, time)\n    }\n  }\n\n}\n\nexport class TimeoutEngine extends Engine {\n  protected async tick() {\n    if (!this.running) return;\n    const now = timeHelpers.now();\n    const dt = (now - this.timestamp) * this.deltaCoef;\n    const time = now * this.deltaCoef;\n    this.timestamp = now;\n    setTimeout(() => this.tick(), this.rate)\n    this.update(dt, time);\n    this.render(dt, time);\n  }\n}\n\nexport class WindowRafEngine extends Engine {\n  protected async tick() {\n    if (!this.running) return;\n    const step = (now: number) => {\n      const dt = (now - this.timestamp) * this.deltaCoef;\n      const time = now * this.deltaCoef;\n      this.timestamp = now;\n      this.update(dt, time)\n      this.render(dt, time)\n      window.requestAnimationFrame(step);\n    };\n    step(timeHelpers.now());\n  }\n}\n","import { Engine, TimeoutEngine, WindowRafEngine } from \"./engine\";\nimport { Bitmap, BitmapPallete } from \"./bitmap\";\n\nimport { EntityManager } from \"./ecs/simple.ecs\";\nimport * as components from \"./components\";\nimport { Systems } from \"./systems\";\nimport { World } from \"./world\";\nimport { Stage } from \"./stage\";\n\nimport stageConfigs from \"./data/runner_stages\";\n\nimport { fileHelpers } from \"./utils\";\n\nimport assetsPlayer from \"../assets/player.png\";\nimport assetsHouses from \"../assets/backgrounds_houses.png\";\nimport assetsBackgrounds from \"../assets/backgrounds.png\";\n\nexport type GameConfig = {\n  width: number;\n  height: number;\n  actions: Set<string>;\n  screen: HTMLCanvasElement;\n  overlay: HTMLDivElement;\n  fps: number;\n};\n\nexport default async (config: GameConfig) => {\n  const { width, height, actions, screen, fps } = config;\n\n  // --------------------------------------------------------------------------\n  const screenCtx = screen.getContext(\"2d\", {\n    alpha: false,\n    colorSpace: 'srgb',\n    willReadFrequently: true,\n  }) as CanvasRenderingContext2D;\n  // const screenCtx = screen.getContext(\"2d\") as CanvasRenderingContext2D;\n  const screenImageData = screenCtx.getImageData(0, 0, width, height) as ImageData;\n  const viewport = Bitmap.from(screenImageData.data.buffer, width, height);\n\n  // --------------------------------------------------------------------------\n  const [tilesPlayer, tilesHouses, tilesBg] = await fileHelpers.loadImagesAsTileableBitmaps(\n    [assetsPlayer, 16, 16, 4, 1],\n    [assetsHouses, 48, 32, 5, 1],\n    [assetsBackgrounds, 32, 32, 6, 1],\n  );\n  const spritesPlayer = tilesPlayer.split().concat(tilesPlayer.flipV().split());\n  const spritesHouses = [\n    tilesHouses.reorder([1,0, 2,2, 0,1], 2, 3),\n    tilesHouses.reorder([2,2, 1,1, 1,1], 2, 3),\n    tilesHouses.reorder([3,4, 3,1, 2,2], 2, 3),\n    tilesHouses.reorder([2,2,2,2, 0,0,0,0], 4, 2),\n    tilesHouses.reorder([1,2,3,1, 0,2,2,0], 4, 2),\n    tilesHouses.reorder([3,4,1,4, 1,3,2,4], 4, 2),\n    tilesHouses.reorder([1,1, 1,1], 2, 2),\n    tilesHouses.reorder([3,2, 1,1], 2, 2),\n    tilesHouses.reorder([1,2,2,1, 1,2,2,1, 0,2,2,0], 4, 3),\n    tilesHouses.reorder([2,0,1,4, 2,0,1,1, 0,0,0,0], 4, 3),\n    tilesHouses.reorder([1,1, 1,1, 2,2, 3,3], 2, 4),\n    tilesHouses.reorder([2,4,3,1,2, 2,1,3,0,2, 0,0,3,0,0], 5, 3),\n    tilesHouses.reorder([0], 1, 1),\n  ]\n  const colors = [0xff101010, 0xff303030, 0];\n  const palletesHouses = spritesHouses.map(sprite => new BitmapPallete(sprite));\n  palletesHouses.forEach(p => p.colors = colors); // TODO: remove\n\n  // --------------------------------------------------------------------------\n  const world = new World({\n      width,\n      height,\n      gravity: 0.5,\n      friction: 0.75,\n      skyColor: 0xffa09080,\n  });\n  let currentStage: Stage;\n  const stages = stageConfigs.map(config => new Stage(\n    world,\n    config,\n    tilesBg,\n    tilesHouses,\n  ));\n\n  // TODO: check what should be removed\n  // TODO: make 0 - entry, 3 - morning, 4 - ending\n  stages.forEach((stage, i) => i > 0 && stages[i - 1].setNext(stage));\n  stages.forEach((stage, i) => stage.onfinish((curr, next) => {\n    currentStage = next;\n    console.debug(`Switching ${i}`);\n  }));\n  currentStage = stages[0];\n  stages[stages.length - 1].onfinish(() => {\n    window.alert(\"Дякую за увагу! Будьте щасливі!\");\n    engine.stop();\n    // console.log(\"You win!\");\n  });\n\n  // --------------------------------------------------------------------------\n  const eManager = new EntityManager(components);\n  const eSystems = Systems(world, viewport);\n  const ePlayer = eManager.add({\n    cPosition: { x: 32, y: 64 },\n    cVelocity: { vx: 0, vy: 0 },\n    cShape: { w: 10, h: 14 },\n    cPlayer: { air: true, speed: 0.8, power: 6 },\n    cInputRunner: { actions, jumping: false, acceleration: 0 },\n    cSprite: { spriteIdx: 0, sprites: spritesPlayer, offsetX: -3, offsetY: -2 },\n    cAnimation: { animations: [ [0, 0, 3, 3], [1, 2, 3, 0], [1, 1, 2, 2] ], current: 0, length: 4, time: 0, coef: 0.4 },\n  });\n  const createBuilding = (spriteIdx: number, col: number, row: number) => eManager.add({\n    cPosition: { x: col * 16, y: row * 20, },\n    cSprite: { spriteIdx, sprites: spritesHouses },\n    cShape: { w: spritesHouses[spriteIdx].width, h: spritesHouses[spriteIdx].height },\n  });\n  const eBuildings = [\n    // createBuilding(11, 0, 6),\n    createBuilding(0,  0,  5),\n    createBuilding(6,  8, 6),\n    createBuilding(1,  16, 5),\n    createBuilding(2,  24, 6),\n    createBuilding(1,  32, 6),\n    createBuilding(0,  40, 7),\n    createBuilding(7,  48, 5),\n    // createBuilding(3,  24, 6),\n  ];\n\n  // --------------------------------------------------------------------------\n  const collideBounds = eSystems.sCollideBounds.setup([ePlayer]);\n  const collideShapes = eSystems.sCollideShapes.setup([ePlayer], eBuildings);\n  const platforms = eSystems.sBuildingsRunner.setup(eBuildings);\n  const move = eSystems.sMovement.setup([ePlayer]);\n  const draw = eSystems.sDrawing.setup([ePlayer, ...eBuildings]);\n  const control = eSystems.sControllerRunner.setup([ePlayer]);\n  const animate = eSystems.sAnimation.setup([ePlayer]);\n\n  // TODO - remove, handle somewhere\n  const { x, y } = components.cPosition.storage;\n\n  // --------------------------------------------------------------------------\n  const render = (dt: number, time: number) => {\n    currentStage.renderBg(dt, viewport);\n    animate(dt);\n    draw(dt);\n    screenCtx.putImageData(screenImageData, 0, 0);\n  };\n  const update = (dt: number, time: number) => {\n    currentStage.update(dt);\n    // if (y[ePlayer] > 200) { // reset player\n    //   x[ePlayer] = 32;\n    //   y[ePlayer] = 64;\n    // }\n    platforms(dt),\n    move(dt);\n    collideBounds(dt);\n    collideShapes(dt);\n    control(dt);\n  };\n  // --------------------------------------------------------------------------\n  // const engine = new Engine(fps, update, render, 60 / 1000);\n  // const engine = new TimeoutEngine(fps, update, render, 60 / 1000);\n  const engine = new WindowRafEngine(fps, update, render, 60 / 1000);\n\n  return { engine }\n}\n","import { Bitmap, BitmapPallete , TileableBitmap} from \"./bitmap\";\nimport stageConfigs from \"./data/runner_stages\";\nimport { colorHelpers } from \"./utils\";\nimport { World } from \"./world\";\n\nexport type StageConfig = {\n  name: string,\n  length: number,\n  bgrows: BgRow[],\n  bgwidth: number,\n  bgfill: number,\n  fgfill: number,\n};\ntype BgRow = {\n  layout: number[],\n  colors: number[]\n  offset: number,\n  speed: number,\n};\n\ntype StageBgRow = {\n  sprite: Bitmap,\n  pallete: BitmapPallete,\n  shift: number,\n  offset: number,\n  speed: number,\n}\nexport type StageCallback = (self: Stage, next: Stage) => void;\n\nexport class Stage {\n  private static current: Stage;\n  private world: World;\n  private next: Stage;\n  private config: StageConfig;\n  private bgRows: StageBgRow[];\n  private bgFadeoutCoefs: [number, number, number];\n  private bgFadeoutTimer: NodeJS.Timeout;\n  private bgFill: number;\n  private fgFill: number;\n  private width: number;\n  private progress: number;\n  private handlers: {\n    onstart: StageCallback;\n    onfinish: StageCallback;\n  }\n  constructor(world: World, config: StageConfig, bgTiles: TileableBitmap, fgTiles: TileableBitmap) {\n    const { bgfill, fgfill, bgwidth, bgrows, length } = config;\n    this.world = world;\n    this.config = config;\n    this.bgFill = bgfill;\n    this.fgFill = fgfill;\n    this.width = bgwidth * bgTiles.twidth;\n    this.progress = length;\n    this.handlers = {\n      onstart: () => {},\n      onfinish: () => {},\n    };\n    this.bgRows = [] as StageBgRow[];\n    const speedQuickFix = 0.5; // TODO: remove, handle properly, later ofc\n    for (let i = 0; i < bgrows.length; i++) {\n      const { layout, colors, offset, speed } = bgrows[i];\n      const sprite = bgTiles.reorder(layout.concat(layout), bgwidth * 2, 1);\n      const pallete = new BitmapPallete(sprite);\n      pallete.colors = colors; \n      this.bgRows[i] = { sprite, pallete, speed: speed * speedQuickFix, shift: 0, offset: offset * sprite.theight };\n    }\n  }\n  update(dt: number) {\n    this.progress -= dt; \n    if (this.progress <= 100 && !this.bgFadeoutTimer) {\n      this.bgFadeoutTimer = setInterval(() => this.interpolateBgPallete((100 - this.progress) / 100), 100);\n    }\n    if (this.progress <= 0) {\n      this.finish();\n      this.next.start();\n      return;\n    }\n  }\n  renderBg(dt: number, viewport: Bitmap) {\n    const { width, bgRows, bgFill } = this;\n    viewport.fill(bgFill);\n    for (const row of bgRows) {\n      row.shift -= row.speed * dt;\n      if (-width >= row.shift) row.shift = 0;\n      viewport.draw(row.sprite, Math.round(row.shift), row.offset);\n    }\n  }\n  renderFg(dt: number, viewport: Bitmap) {\n\n  }\n  interpolateBgPallete(step: number) {\n    if (!this.next) return;\n    const { bgrows: sbgrows, bgfill: sbgfill } = this.config;\n    const { bgrows: dbgrows, bgfill: dbgfill } = this.next.config;\n    this.bgFill = colorHelpers.interpolate(sbgfill, dbgfill, step);\n    this.bgRows.forEach((row, i) => {\n      const spal = sbgrows[i].colors;\n      const dpal = dbgrows[i].colors;\n      const colors = spal.map((_, j) => colorHelpers.interpolate(spal[j], dpal[j], step));\n      row.pallete.colors = colors;\n    });\n  }\n  setNext(stage: Stage) {\n    this.next = stage;\n    const [_, B, G, R] = colorHelpers.calccoefs(\n      colorHelpers.hex2abgr(this.config.bgfill),\n      colorHelpers.hex2abgr(stage.config.bgfill),\n    );\n    // TODO: no need for now. interpolation is used for all rows\n    this.bgFadeoutCoefs = [B, G, R];\n  }\n  start() {\n    this.handlers.onstart(this, this.next);\n    clearInterval(this.bgFadeoutTimer);\n    console.debug(`Start: ${this.config.name}`)\n  }\n  finish() {\n    this.handlers.onfinish(this, this.next);\n    clearInterval(this.bgFadeoutTimer);\n    console.debug(`Finish: ${this.config.name}`)\n  }\n  onstart(cb: StageCallback) { this.handlers.onstart = cb; }\n  onfinish(cb: StageCallback) { this.handlers.onfinish = cb; }\n}\n\n","import { System } from \"./ecs/simple.ecs\";\nimport { World } from \"./world\";\nimport { Bitmap } from \"./bitmap\";\nimport {\n  cPosition,\n  cVelocity,\n  cShape,\n  cSprite,\n  cAnimation,\n  cInput,\n  cInputRunner,\n  cPlayer,\n} from \"./components\";\nimport { collisionHelpers, CollisionSide } from \"./utils\";\n\nimport { debug } from \".\";\n\nconst { rectangle, bounds } = collisionHelpers;\n\nexport function Systems(world: World, viewport: Bitmap) {\n  console.debug(\"SYSYEMS: initialization\");\n\n  const { width, height } = world;\n  return {\n    /* Collide entities with world bounds */\n    sCollideBounds: new System(\n      { cPosition, cVelocity, cShape, cPlayer },\n      (_, comp, entities) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { w, h } = comp.cShape.storage;\n        const { air } = comp.cPlayer.storage;\n        for (const e of entities) {\n          const eRight = x[e] + w[e];\n          const eBottom = y[e] + h[e];\n          const collisionSide = bounds(\n            x[e], y[e], eRight, eBottom,\n            0, 0, width, height,\n          );\n          if (collisionSide == CollisionSide.None) continue;\n          switch (collisionSide) {\n            case CollisionSide.Bottom: x[e] = 32; y[e] = 32; air[e] = true; break;\n            case CollisionSide.Left: vx[e] = 0; x[e] = 0; break;\n            case CollisionSide.Right: vx[e] = 0; x[e] = width - w[e]; break;\n            case CollisionSide.Top: vy[e] = 1; y[e] = 0; break;\n          }\n        }\n      },\n    ),\n\n    /* Collide entities from groupA with entities from groupB */\n    sCollideShapes: new System(\n      { cPosition, cVelocity, cShape, cPlayer },\n      (_, comp, entities, blocks) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { w, h } = comp.cShape.storage;\n        const { air } = comp.cPlayer.storage;\n        for (const e of entities) {\n          const eRight = x[e] + w[e];\n          const eBottom = y[e] + h[e];\n          let totalCollisions = 0;\n          for (const b of blocks) {\n            if (totalCollisions > 2) break;\n            const bRight = x[b] + w[b];\n            const bBottom = y[b] + h[b];\n            const collisionSide = rectangle(\n              x[e], y[e], eRight, eBottom,\n              x[b], y[b], bRight, bBottom,\n            );\n            if (collisionSide === CollisionSide.None) continue;\n            totalCollisions++;\n            switch (collisionSide) {\n              case CollisionSide.Bottom: vy[e] = 0; y[e] = y[b] - h[e]; air[e] = false; break;\n              case CollisionSide.Right: vx[e] = 0; x[e] = x[b] - w[e] - 0.01; break;\n              case CollisionSide.Left: vx[e] = 0; x[e] = bRight + 0.01; break;\n              case CollisionSide.Top: vy[e] = 1; y[e] = bBottom; break;\n            }\n          }\n        }\n      },\n    ),\n\n    /* Move entity using velocity values */\n    sMovement: new System(\n      { cPosition, cVelocity, cPlayer },\n      (dt, comp, entities) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air } = comp.cPlayer.storage;\n        const { friction, gravity } = world;\n        for (const e of entities) {\n          x[e] += vx[e] * dt;\n          y[e] += vy[e] * dt;\n          // TODO: think to move it separately, to avoid dependency with cPlayer.air\n          vx[e] *= friction;\n          vy[e] += gravity;\n        }\n      },\n    ),\n\n    /* Render frame of spritesheet by index */\n    sDrawing: new System({ cSprite, cPosition }, (_, comp, entities) => {\n      const { sprites, spriteIdx, flipped, offsetX, offsetY } = comp.cSprite.storage;\n      const { x, y } = comp.cPosition.storage;\n      for (const e of entities) {\n        const half = sprites[e].length / 2;\n        const idx = flipped[e] ? spriteIdx[e] + half : spriteIdx[e];\n        viewport.draw(\n          sprites[e][idx],\n          Math.round(offsetX[e] + x[e]),\n          Math.round(offsetY[e] + y[e]),\n        );\n      }\n    }),\n\n    /* Calculate next frame needed to draw */\n    sAnimation: new System({ cAnimation, cSprite }, (dt, comp, entities) => {\n      const { animations, current, length, time, coef } = comp.cAnimation.storage;\n      const { spriteIdx } = comp.cSprite.storage;\n      for (const e of entities) {\n        const frameTime = (time[e] + dt * coef[e]) % length[e];\n        spriteIdx[e] = animations[e][current[e]][frameTime | 0];\n        time[e] = frameTime;\n      }\n    }),\n\n    /* Listen for user input */\n    sController: new System(\n      { cVelocity, cInput, cSprite, cPlayer, cAnimation },\n      (_, comp, entities) => {\n        const { flipped } = comp.cSprite.storage;\n        const { current } = comp.cAnimation.storage;\n        const { keys } = comp.cInput.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air, speed } = comp.cPlayer.storage;\n        for (const e of entities) {\n          if (!keys[e].size) {\n            current[e] = air[e] ? 2 : 0;\n            continue;\n          }\n          if (keys[e].has(\"KeyQ\"))      vx[e] -= speed[e], current[e] = 1, flipped[e] = true;\n          else if (keys[e].has(\"KeyW\")) vx[e] += speed[e], current[e] = 1, flipped[e] = false;\n          if (keys[e].has(\"KeyP\"))      !air[e] && (air[e] = true, vy[e] = -10);\n        }\n      },\n    ),\n\n    /* Listen for user input for runner mode */\n    sControllerRunner: new System(\n      { cVelocity, cInputRunner, cPlayer, cAnimation },\n      (_, comp, entities) => {\n        const { current, coef } = comp.cAnimation.storage;\n        const { actions, jumping } = comp.cInputRunner.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air, speed, power } = comp.cPlayer.storage;\n        for (const e of entities) {\n          if (!actions[e].size) {\n            current[e] = air[e] ? 2 : 1;\n            coef[e] = 0.24\n            if (air[e] == false) jumping[e] = false;\n            continue;\n          }\n          if (actions[e].has(\"Jump\")) {\n            if (!jumping[e] && !air[e]) {\n              jumping[e] = true;\n              air[e] = true;\n              vy[e] = -power[e];\n            }\n          } else if (air[e] == false) jumping[e] = false;\n\n          if (actions[e].has(\"Left\"))      vx[e] -= speed[e], coef[e] = 0.12, current[e] = 1;\n          else if (actions[e].has(\"Right\")) vx[e] += speed[e], coef[e] = 0.48, current[e] = 1;\n        }\n      },\n    ),\n\n    /* Generate platforms */\n    sBuildingsRunner: new System(\n      { cPosition, cShape },\n      (dt, comp, entities) => {\n        const speed = 1.5;\n        const { x, y } = comp.cPosition.storage;\n        const { w, h } = comp.cShape.storage;\n        for (const e of entities) {\n          x[e] -= speed * dt;\n          // no replace if still visible\n          if (x[e] >= -w[e]) continue;\n          x[e] += width + w[e];\n          //const [dx, dy] = platformPlacer(x[e], y[e], w[e], h[e], e);\n          // x[e] += width + w[e] + dx;\n          // y[e] += dy;\n        }\n      }\n    ),\n  };\n}\n","import { Bitmap, TileableBitmap } from \"./bitmap\";\n\n// file loading helpers\nexport interface Image {\n  width: number;\n  height: number;\n  data: ArrayBuffer;\n}\nexport const fileHelpers = {\n  loadImage(src: string): Promise<Image> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        const { width, height } = image;\n        canvas.width = width;\n        canvas.height = height;\n        context.drawImage(image, 0, 0);\n        const imageData = context.getImageData(0, 0, width, height);\n        return resolve({ width, height, data: imageData.data.buffer });\n      };\n      image.onerror = (err) => {\n        console.error(\"Error loading image:\", err);\n        reject(err);\n      };\n      image.src = src;\n    });\n  },\n  loadImageAsBitmap(src: string): Promise<Bitmap> {\n    return fileHelpers\n      .loadImage(src)\n      .then(img => Bitmap.from(img.data, img.width, img.height))\n      .catch(err => {\n        console.error(\"Error loading bitmap:\", src);\n        throw err;\n      });\n  },\n  loadImagesAsTileableBitmaps(...configs: Array<[\n    src: string,\n    width: number,\n    height: number,\n    cols: number,\n    rows: number,\n  ]>): Promise<TileableBitmap[]> {\n    return Promise.all(configs.map(([src, w, h, c, r]) => fileHelpers\n      .loadImage(src)\n      .then(img => TileableBitmap.from(img.data, w, h, c, r))\n      .catch(err => {\n        console.error(\"Error loading tileable bitmap:\", src, err);\n        return TileableBitmap.from(new ArrayBuffer(w * h), w, h, c, r);\n      }),\n    ));\n  },\n};\n\n// color helpers\nexport type hex = number;\nexport type abgr = [number, number, number, number];\nexport const colorHelpers = {\n  hex2abgr: (hex: hex): abgr => ([hex >>> 24 & 0xff, hex >>> 16 & 0xff, hex >>> 8 & 0xff, hex & 0xff]),\n  abgr2hex: ([a, b, g, r]: abgr) => ((a << 24) | (b << 16) | (g << 8) | r) >>> 0,\n  hexadjust: (hex: hex, [A, B, G, R]: abgr) => {\n    const [a, b, g, r] = colorHelpers.hex2abgr(hex);\n    return colorHelpers.abgr2hex([Math.min(a * A, 255), Math.min(b * B, 255), Math.min(g * G, 255), Math.min(r * R, 255)]);\n  },\n  calccoefs: (colora: abgr, colorb: abgr, K = 1) => {\n    const A = colora[0] == 0 ? 255 : colorb[0] / colora[0] * K;\n    const B = colora[1] == 0 ? 255 : colorb[1] / colora[1] * K;\n    const G = colora[2] == 0 ? 255 : colorb[2] / colora[2] * K;\n    const R = colora[3] == 0 ? 255 : colorb[3] / colora[3] * K;\n    return [A, B, G, R];\n  },\n  interpolate: (hexa: hex, hexb: hex, step: number) => {\n    const colora = colorHelpers.hex2abgr(hexa);\n    const colorb = colorHelpers.hex2abgr(hexb);\n    const a = colora[0] + (colorb[0] - colora[0]) * step | 0;\n    const b = colora[1] + (colorb[1] - colora[1]) * step | 0;\n    const g = colora[2] + (colorb[2] - colora[2]) * step | 0;\n    const r = colora[3] + (colorb[3] - colora[3]) * step | 0;\n    return colorHelpers.abgr2hex([a, b, g, r]);\n  }\n};\n\n// timeHelpers\nexport const timeHelpers = {\n  sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  },\n  now(): number {\n    return performance.now();\n  }\n};\n\n// colision helpers\nexport enum CollisionSide {\n  None = \"none\",\n  Left = \"left\",\n  Right = \"right\",\n  Top = \"top\",\n  Bottom = \"bottom\",\n}\nexport const collisionHelpers = {\n  circle(\n    x0: number, y0: number, d0: number,\n    x1: number, y1: number, d1: number,\n  ): boolean {\n    const dist = Math.sqrt(\n      (x1 - x0) ** 2 + \n      (y1 - y0) ** 2\n    );\n    return dist <= (d0 + d1);\n  },\n  rectangle(\n    x0: number, y0: number,\n    r0: number, b0: number,\n    x1: number, y1: number,\n    r1: number, b1: number,\n  ): CollisionSide {\n    if (x0 > r1 || x1 > r0 || y0 > b1 || y1 > b0) return CollisionSide.None;\n    const dx = Math.min(r0 - x1, r1 - x0);\n    const dy = Math.min(b0 - y1, b1 - y0);\n    return dx < dy\n      ? x0 > x1 ? CollisionSide.Left : CollisionSide.Right\n      : y0 > y1 ? CollisionSide.Top : CollisionSide.Bottom;\n  },\n  bounds(\n    x0: number, y0: number,\n    r0: number, b0: number,\n    bl: number, bt: number,\n    br: number, bb: number,\n  ): CollisionSide {\n    if (y0 < bt) return CollisionSide.Top;\n    if (b0 > bb) return CollisionSide.Bottom;\n    if (x0 < bl) return CollisionSide.Left;\n    if (r0 > br) return CollisionSide.Right;\n    return CollisionSide.None;\n  },\n};\n\n// benchmark tools\nexport const benchmark = (name = \"default\", calcMiddleRate = 10, fixedDigit = 4) => {\n  let minimumtime = Infinity;\n  let maximumtime = 0;\n  let lasttime = 0;\n  let calcMiddleIter = calcMiddleRate;\n\n  const history = [];\n  const middles = [];\n\n  const A = () => lasttime = performance.now();\n\n  const B = () => {\n    const dt = performance.now() - lasttime;\n    if (dt <= 0 && dt >= Infinity) {\n      console.log(\"lol\", dt);\n      return;\n    }\n    calcMiddleIter--;\n    history.push(dt);\n    if (minimumtime > dt) minimumtime = dt;\n    if (maximumtime < dt) maximumtime = dt;\n    if (calcMiddleIter > 0) return;\n    calcMiddleIter = calcMiddleRate;\n    middles.push(middle(history));\n    clear();\n  }\n  const fps = (time: number) => 1 / (time * 0.001);\n  const clear = () => history.length = 0;\n  const middle = (arr: number[]) => arr.reduce((acc, v) => acc += v, 0) / arr.length;\n  const fixed = (num: number) => +num.toFixed(fixedDigit);\n  const filter = (num: number) => num > 0 && num < Infinity;\n\n  const resultsTime = () => ({\n    name,\n    min: fixed(minimumtime),\n    max: fixed(maximumtime),\n    middles: middles.filter(filter).map(fixed),\n  });\n\n  const resultsFps = () => ({\n    name,\n    maxFps: fixed(fps(minimumtime)),\n    minFps: fixed(fps(maximumtime)),\n    fps: fixed(fps(middle(middles))),\n    middlesFps: middles.filter(filter).map(fps).map(fixed),\n  })\n\n  return { A, B, resultsTime, resultsFps };\n};\n\n","export class World {\n  readonly width: number;\n  readonly height: number;\n  public gravity: number;\n  public friction: number;\n  public skyColor: number;\n  public time: number;\n\n  constructor({ width, height, gravity, friction, skyColor }) {\n    this.width = width;\n    this.height = height;\n    this.gravity = gravity;\n    this.friction = friction;\n    this.skyColor = skyColor;\n    this.time = 0;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import runnerGame from \"./runnerGame\";\n\nexport const debug: any = {};\n\nwindow.addEventListener(\"load\", async () => {\n  const debugEl = document.getElementById(\"debug\") as HTMLDivElement;\n  debug.set = (...msg: string[]) => (debugEl.innerHTML = msg.join(\", \"));\n  debug.add = (...msg: string[]) => (debugEl.innerHTML += \"<br>\" + msg.join(\", \"));\n\n  const width = 320;\n  const height = 160;\n\n  console.log(document);\n  const screen = document.getElementById(\"screen\") as HTMLCanvasElement;\n  const overlay = document.getElementById(\"overlay\") as any;\n  overlay.set = (...msg: string[]) => (debugEl.innerHTML = msg.join(\"<br>\"));\n  overlay.add = (...msg: string[]) => (debugEl.innerHTML += msg.join(\"<br>\"));\n  const buttons = [\n    document.getElementById(\"btn-left\"),\n    document.getElementById(\"btn-right\"),\n    document.getElementById(\"btn-jump\"),\n  ];\n\n  screen.width = width;\n  screen.height = height;\n\n  const actions: Set<string> = new Set();\n  const actionsMapping = {\n    KeyQ: \"Left\", KeyW: \"Right\", KeyP: \"Jump\",\n    KeyA: \"Left\", KeyD: \"Right\", Space: \"Jump\",\n    ArrowLeft: \"Left\", ArrowRight: \"Right\", ArrowUp: \"Jump\",\n    \"btn-left\": \"Left\", \"btn-right\": \"Right\", \"btn-jump\": \"Jump\",\n  };\n  window.addEventListener(\"keydown\", ({ code }) => actionsMapping[code] && actions.add(actionsMapping[code]));\n  window.addEventListener(\"keyup\", ({ code }) => actionsMapping[code] && actions.delete(actionsMapping[code]));\n  for (const btn of buttons) {\n    btn.addEventListener(\"touchstart\", ({ target: { id } }: any) => actionsMapping[id] && actions.add(actionsMapping[id]))\n    btn.addEventListener(\"touchend\", ({ target: { id } }: any) => actionsMapping[id] && actions.delete(actionsMapping[id]))\n    btn.addEventListener(\"mousedown\", ({ target: { id } }: any) => actionsMapping[id] && actions.add(actionsMapping[id]))\n    btn.addEventListener(\"mouseup\", ({ target: { id } }: any) => actionsMapping[id] && actions.delete(actionsMapping[id]))\n  };\n\n  window.addEventListener(\"orientationchange\", (event) => {\n    const message = `the orientation of the device is now ${event.target.screen.orientation.angle}`; \n    alert(message);\n  });\n\n  const game = await runnerGame({ screen, overlay, width, height, actions, fps: 1000/60 });\n  game.engine.start();\n  console.log(\"INITIALIZED\");\n});\n\nfunction enableFS() {\n  const elem = document.getElementById(\"container\");\n  const enterFullscreen = elem.requestFullscreen\n    || elem.webkitRequestFullscreen\n    || elem.msRequestFullscreen;\n  enterFullscreen();\n}\nfunction disableFS() {\n  if (document.fullscreenElement) {\n    document.exitFullscreen();\n  }\n}\n"],"names":[],"sourceRoot":""}