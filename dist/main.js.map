{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAEA;IAAA;IAuCA,CAAC;IAtCC;;;QAGI;IACJ,2BAAS,GAAT,UAAU,GAAW;QACnB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,KAAK,CAAC,MAAM,GAAG;gBACb,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAChC,SAAK,GAAa,KAAK,MAAlB,EAAE,MAAM,GAAK,KAAK,OAAV,CAAW;gBAChC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,IAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC5D,OAAO,OAAO,CAAC,EAAE,KAAK,SAAE,MAAM,UAAE,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACjE,CAAC,CAAC;YACF,KAAK,CAAC,OAAO,GAAG,UAAC,KAAK;gBACpB,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;gBACpD,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;YACF,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;QAEI;IACJ,uBAAK,GAAL,UAAM,EAAU;QACd,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IAC3D,CAAC;IAED;;QAEI;IACJ,qBAAG,GAAH;QACE,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCD,YAAY;AACZ;IAKE;;wCAEoC;IACpC,gBAAY,KAAa,EAAE,MAAc;QACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED;;;;4BAIwB;IACV,WAAI,GAAlB,UAAmB,MAAmB,EAAE,KAAa,EAAE,MAAc;QACnE,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;QACtC,OAAO,MAAM,CAAC;IAChB,CAAC;IAID,sBAAW,0BAAM;QAFjB;yDACiD;aACjD;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;;;OAAA;IAED;;;;sBAIkB;IACX,qBAAI,GAAX,UAAY,MAAc,EAAE,CAAS,EAAE,CAAS;QACxC,SAAwC,IAAI,EAApC,IAAI,YAAS,EAAE,aAAU,EAAE,YAAS,CAAC;QAC3C,IAAM,GAAG,GAAiB,MAAM,KAAvB,EAAU,EAAE,GAAK,MAAM,MAAX,CAAY;QACzC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAE,SAAS;YAC3B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACxB,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE;gBAAE,SAAS;YACvD,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;sBAQkB;IACX,qBAAI,GAAX,UAAY,MAAc,EAAE,CAAS,EAAE,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,KAAa,EAAE,MAAc;QAC7F,IAAM,IAAI,GAA4B,MAAM,KAAlC,EAAS,EAAE,GAAiB,MAAM,MAAvB,EAAU,EAAE,GAAK,MAAM,OAAX,CAAY;QAC/C,SAA4B,IAAI,EAAxB,GAAG,YAAU,EAAE,WAAS,CAAC;QACvC,IAAI,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;QACvB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACzD,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;gBAAE,SAAS;YAC1B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YAC3B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;YAC/B,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE;gBAAE,SAAS;YACvD,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;4BAKwB;IACjB,wBAAO,GAAd,UAAe,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;QAChE,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACnC,SAAwC,IAAI,EAApC,GAAG,YAAU,EAAE,aAAU,EAAE,YAAS,CAAC;QAC3C,IAAM,IAAI,GAAgB,MAAM,KAAtB,EAAS,EAAE,GAAK,MAAM,MAAX,CAAY;QACzC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACxB,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE;gBAAE,SAAS;YACvD,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;4BACwB;IACjB,sBAAK,GAAZ;QACE,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAM,IAAI,GAAK,MAAM,KAAX,CAAY;QACtB,IAAM,GAAG,GAAK,IAAI,KAAT,CAAU;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,OAAO,CAAC,EAAE;YAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;sBAEkB;IACX,qBAAI,GAAX,UAAY,KAAa;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;sBACkB;IACX,sBAAK,GAAZ;QACQ,SAAkB,IAAI,EAApB,IAAI,YAAE,KAAK,WAAS,CAAC;QAC7B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAM,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,EAAE,IAAK,KAAK,GAAG,CAAC;gBAAE,SAAS;YAC/B,IAAM,EAAE,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YACzB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;YAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAClB,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;sBACkB;IACX,sBAAK,GAAZ;QACQ,SAA0B,IAAI,EAA5B,IAAI,YAAE,KAAK,aAAE,MAAM,YAAS,CAAC;QACrC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAM,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;YACrB,IAAM,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;YAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAClB,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACH,aAAC;AAAD,CAAC;;AAED,oBAAoB;AACpB;IAAoC,kCAAM;IAMxC;;;;sDAIkD;IAClD,wBAAY,MAAc,EAAE,OAAe,EAAE,IAAY,EAAE,IAAY;QACrE,kBAAK,YAAC,MAAM,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC,SAAC;QACrC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IAED;;;;;;oCAMgC;IAClB,mBAAI,GAAlB,UAAmB,MAAmB,EAAE,MAAc,EAAE,OAAe,EAAE,IAAgB,EAAE,IAAgB;QAAlC,+BAAgB;QAAE,+BAAgB;QACzG,IAAM,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAChE,OAAO,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;4BAGwB;IACjB,oCAAW,GAAlB,UAAmB,GAAW,EAAE,GAAW;QACzC,OAAO,IAAI,CAAC,OAAO,CACjB,GAAG,GAAG,IAAI,CAAC,MAAM,EACjB,GAAG,GAAG,IAAI,CAAC,OAAO,EAClB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CACb,CAAC;IACJ,CAAC;IAED;;;;;;sBAMkB;IACX,iCAAQ,GAAf,UAAgB,MAAc,EAAE,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE,GAAW;QAC5E,OAAO,IAAI,CAAC,IAAI,CACd,MAAM,EAAE,CAAC,EAAE,CAAC,EACZ,GAAG,GAAG,IAAI,CAAC,MAAM,EACjB,GAAG,GAAG,IAAI,CAAC,OAAO,EAClB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CACb,CAAC;IACJ,CAAC;IAED;kCAC8B;IACvB,8BAAK,GAAZ;QACE,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;YACzC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;gBACzC,IAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC5B,IAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;oCAIgC;IACzB,gCAAO,GAAd,UAAe,KAAe,EAAE,IAAY,EAAE,IAAY;QAClD,SAAmC,IAAI,EAArC,MAAM,cAAE,OAAO,eAAQ,KAAK,UAAS,CAAC;QAC9C,IAAM,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QACpB,OAAM,CAAC,EAAE,EAAE,CAAC;YACV,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACb,SAAW,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAlC,EAAE,UAAE,EAAE,QAA4B,CAAC;YACpC,SAAW,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAApC,EAAE,UAAE,EAAE,QAA8B,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,qBAAC;AAAD,CAAC,CA7FmC,MAAM,GA6FzC;;AAED,mBAAmB;AACnB;IAKE;oCACgC;IAChC,uBAAY,MAAc;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7B,IAAM,GAAG,GAAG,EAAc,CAAC;QAC3B,IAAM,MAAM,GAAG,EAAc,CAAC;QAC9B,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;gBACZ,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;;gBAAM,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAID,sBAAW,kCAAO;QAFlB;4BACoB;aACpB;YACE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,CAAC;QAED;gDACwC;aACxC,UAAmB,OAAiB;YAClC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;;;OAPA;IASD,qCAAqC;IAC3B,6BAAK,GAAf;QACQ,SAIF,IAAI,EAHI,MAAM,qBAChB,WAAW,mBACX,UAAU,gBACJ,CAAC;QACT,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACpS4C;AAE7C,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;AAElC,IAAM,SAAS,GAAG,IAAI,sDAAS,CAA2B;IAC/D,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;CACL,CAAC,CAAC;AAEI,IAAM,SAAS,GAAG,IAAI,sDAAS,CAA6B;IACjE,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;CACN,CAAC,CAAC;AAEI,IAAM,MAAM,GAAG,IAAI,sDAAS,CAA2B;IAC5D,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;CACL,CAAC,CAAC;AAEI,IAAM,OAAO,GAAG,IAAI,sDAAS,CAMjC;IACD,SAAS,EAAE,CAAC;IACZ,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,CAAC;CACX,CAAC,CAAC;AAEI,IAAM,UAAU,GAAG,IAAI,sDAAS,CAMpC;IACD,UAAU,EAAE,CAAC,EAAE,CAAC;IAChB,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;CACR,CAAC,CAAC;AAEI,IAAM,MAAM,GAAG,IAAI,sDAAS,CAAwB;IACzD,IAAI,EAAE,IAAI,GAAG,EAAE;CAChB,CAAC,CAAC;AAEI,IAAM,KAAK,GAAG,IAAI,sDAAS,CAAkC;IAClE,GAAG,EAAE,KAAK;IACV,KAAK,EAAE,CAAC;CACT,CAAC,CAAC;AAEH,mGAAmG;AACnG,UAAU;AACV,UAAU;AACV,WAAW;AACX,cAAc;AACd,MAAM;AACN,GAAG;AACH,iEAAiE;AACjE,wCAAwC;AACxC,mBAAmB;AACnB,oBAAoB;AACpB,qBAAqB;AACrB,sBAAsB;AACtB,sBAAsB;AACtB,OAAO;AACP,cAAc;AACd,eAAe;AACf,gBAAgB;AAChB,iBAAiB;AACjB,gCAAgC;AAChC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EN,mBAAmB;AACnB;IAEE;gDAC4C;IAC5C,uBAAoB,UAAa;QAAb,eAAU,GAAV,UAAU,CAAG;QAHzB,QAAG,GAAG,CAAC,CAAC;IAGoB,CAAC;IAErC;;8BAE0B;IAC1B,2BAAG,GAAH,UAAuB,UAA0D;QAC/E,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3C,KAAyC,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAC,CAAC;YAAvC,sBAA0B,EAAzB,aAAa,UAAE,SAAS;YAClC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;IACpB,CAAC;IAED;;gDAE4C;IAC5C,2BAAG,GAAH,UAAuB,GAAW,EAAE,UAAwC;QAC1E,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,KAAyC,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE,CAAC;YAAxC,sBAA0B,EAAzB,aAAa,UAAE,SAAS;YAClC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,WAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,aAAa,CAAC,KAAI,EAAE,CAAC;QACvD,CAAC;IACH,CAAC;IAED;;wCAEoC;IACpC,2BAAG,GAAH,UAAuB,GAAW;QAChC,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,IAAM,MAAM,GAAG,EAAkC,CAAC;QAClD,KAAyC,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAC,CAAC;YAAvC,sBAA0B,EAAzB,aAAa,UAAE,SAAS;YAClC,MAAM,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,wDAAwD;IACxD,6BAAK,GAAL;QACE,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,KAAwB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;YAA7B,IAAM,SAAS;YAAgB,SAAS,CAAC,KAAK,EAAE,CAAC;SAAA;QACtD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACf,CAAC;IACH,oBAAC;AAAD,CAAC;;AAID;IAGE;mDAC+C;IAC/C,mBAAY,MAAS;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CACvC,UAAC,GAAG,EAAE,GAAG;;YAAK,8BAAM,GAAG,gBAAG,GAAG,IAAG,EAAE,OAAG;QAAvB,CAAuB,EACrC,EAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;2CAEuC;IACvC,uBAAG,GAAH,UAAI,GAAW;QACL,WAAO,GAAK,IAAI,QAAT,CAAU;QACzB,IAAM,OAAO,GAAG,EAAO,CAAC;QACxB,KAAK,IAAM,IAAI,IAAI,OAAO;YAAE,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/D,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;8BAG0B;IAC1B,uBAAG,GAAH,UAAI,GAAW,EAAE,IAAO;QACd,WAAO,GAAK,IAAI,QAAT,CAAU;QACzB,KAAK,IAAM,IAAI,IAAI,OAAO;YAAE,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjF,OAAO,GAAG,CAAC;IACb,CAAC;IAED,8BAA8B;IAC9B,yBAAK,GAAL;QACU,WAAO,GAAK,IAAI,QAAT,CAAU;QACzB,KAAK,IAAM,IAAI,IAAI,OAAO;YAAE,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACvD,CAAC;IACH,gBAAC;AAAD,CAAC;;AASD;IACE;;0DAEsD;IACtD,gBACW,UAAa,EACd,OAAyB;QADxB,eAAU,GAAV,UAAU,CAAG;QACd,YAAO,GAAP,OAAO,CAAkB;IAChC,CAAC;IAEJ;;0BAEsB;IACtB,sBAAK,GAAL;QAAA,iBAEC;QAFK,sBAA2B;aAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;YAA3B,iCAA2B;;QAC/B,OAAO,UAAC,EAAE,IAAK,YAAI,CAAC,OAAO,OAAZ,KAAI,iBAAS,EAAE,EAAE,KAAI,CAAC,UAAU,GAAK,YAAY,WAAjD,CAAkD,CAAC;IACpE,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GD;IAIE,gBACU,OAAiB,EACjB,IAAY,EACZ,MAAqB,EACrB,MAAqB,EACpB,SAAwB;QAAxB,4CAAwB;QAJzB,YAAO,GAAP,OAAO,CAAU;QACjB,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;QACpB,cAAS,GAAT,SAAS,CAAe;QAR3B,cAAS,GAAW,CAAC,CAAC;QACtB,YAAO,GAAY,KAAK,CAAC;IAQ9B,CAAC;IAEE,qBAAI,GAAV;;;;;;6BACS,IAAI,CAAC,OAAO;wBACX,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;wBAC1B,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;wBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;wBACpC,qBAAqB;wBACrB,qBAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;;wBADnC,qBAAqB;wBACrB,SAAmC,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;wBACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;;;;;;KAElB;IAEK,4BAAW,GAAjB;;;;;gBACE,IAAI,CAAC,IAAI,CAAC,OAAO;oBAAE,sBAAO;gBAEpB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAC1B,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAEpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBAEf,UAAU,CAAC,cAAM,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,EAAE,IAAI,CAAC,IAAI,CAAC;;;;KACzC;IAED,sBAAK,GAAL;QACE,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,qBAAqB;IACvB,CAAC;IAED,qBAAI,GAAJ;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDwC;AAGU;AAInD,0DAA0D;AACnD,SAAe,QAAQ,CAAC,EAAsB,EAAE,KAAY,EAAE,OAAiB,EAAE,IAAwB;;;;;;oBAC9G,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBACgB,qBAAM,gEAAsB,CACjF,OAAO,EACP,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EACrC,CAAC,wBAAwB,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EACxC,CAAC,0BAA0B,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAC1C,CAAC,iCAAiC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAClD;;oBANK,KAAiD,SAMtD,EANM,WAAW,UAAE,UAAU,UAAE,OAAO,UAAE,UAAU;oBAOnD,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBACpC,aAAa,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;oBACxE,YAAY,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;oBAC5B,YAAY,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;oBAKlC,gBAAgB,GAAE,EAAE,CAAC;oBACrB,gBAAgB,GAAG;wBACvB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAE7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;wBAC7F,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAE,CAAC,CAAC;qBAC9F,CAAC;oBACI,kBAAkB,GAAG,gBAAgB,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,WAAI,kDAAa,CAAC,MAAM,CAAC,EAAzB,CAAyB,CAAC,CAAC;oBAEjF,eAAe,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5C,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5C,gBAAgB,GAAG;wBACvB,UAAU,CAAC,OAAO,qHACb,eAAe,SACf,eAAe,SACf,gBAAgB,SAChB,gBAAgB,SAChB,eAAe,SACf,eAAe,SACf,gBAAgB,SAChB,gBAAgB,SAClB,EAAE,EAAE,CAAC,CAAC;qBACV,CAAC;oBACI,kBAAkB,GAAG,gBAAgB,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,WAAI,kDAAa,CAAC,MAAM,CAAC,EAAzB,CAAyB,CAAC,CAAC;oBAEvF,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBAErC,YAAY,GAAG,EAAE,CAAC,GAAG,CAAC;wBAC1B,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE;wBAC5B,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC3B,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;wBACxB,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;wBAChC,MAAM,EAAE,EAAE,IAAI,QAAE;wBAChB,OAAO,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;wBAC3E,UAAU,EAAE;4BACV,UAAU,EAAE,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;4BACxD,OAAO,EAAE,CAAC;4BACV,MAAM,EAAE,CAAC;4BACT,IAAI,EAAE,CAAC;4BACP,IAAI,EAAE,GAAG;yBACV;qBACF,CAAC,CAAC;oBAGG,oBAAoB,GAAG,UAAC,SAAiB,EAAE,CAAS,EAAE,CAAS,IAAK,SAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAV,CAAU,CAAC;oBAG/E,sBAAsB,GAAG,UAAC,SAAiB,EAAE,GAAW,EAAE,KAAa,IAAK,SAAE,CAAC,GAAG,CAAC;wBACvF,UAAU,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;wBAC9E,OAAO,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,aAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE;qBACjF,CAAC,EAHgF,CAGhF,CAAC;oBACG,wBAAwB,GAAG;wBAC/B,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;wBAClC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;qBACnC;oBAEK,sBAAsB,GAAG,UAAC,SAAiB,EAAE,GAAW,EAAE,KAAa,IAAK,SAAE,CAAC,GAAG,CAAC;wBACvF,UAAU,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;wBAC9E,OAAO,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,aAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE;qBACjF,CAAC,EAHgF,CAGhF,CAAC;oBACG,wBAAwB,GAAG,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEpE,sBAAO;4BACL,gCAAgC;4BAChC,KAAK,EAAE,EAAE,WAAW,eAAE,UAAU,cAAE,OAAO,WAAE,UAAU,cAAE;4BACvD,OAAO,EAAE,EAAE,aAAa,iBAAE,YAAY,gBAAE,SAAS,aAAE,YAAY,gBAAE;4BACjE,UAAU,EAAE,EAAE,gBAAgB,oBAAE,kBAAkB,sBAAE,gBAAgB,oBAAE,kBAAkB,sBAAE;4BAC1F,WAAW;4BACX,YAAY;4BACZ,wBAAwB;4BACxB,wBAAwB;yBACzB,EAAC;;;;CACH;;;;;;;;;;;;;;;;;;;AC5GiD;AAU3C,IAAM,sBAAsB,GAAG,UACpC,OAAgB;IAChB,iBAA6C;SAA7C,UAA6C,EAA7C,qBAA6C,EAA7C,IAA6C;QAA7C,gCAA6C;;IAE7C,cAAO,CAAC,GAAG,CACT,OAAO,CAAC,GAAG,CAAC,UAAC,EAAwB;YAAvB,IAAI,UAAE,CAAC,UAAE,CAAC,UAAE,IAAI,UAAE,IAAI;QAClC,cAAO;aACJ,SAAS,CAAC,IAAI,CAAC;aACf,IAAI,CAAC,UAAC,GAAG,IAAK,0DAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAA/C,CAA+C,CAAC;aAC9D,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC9D,OAAO,mDAAc,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvE,CAAC,CAAC;IANJ,CAMI,CACL,CACF;AAVD,CAUC,CAAC;AAEG,IAAM,0BAA0B,GAAG,UACxC,EAAsB,EACtB,OAAiB,EACjB,SAAiB,EACjB,CAAS,EAAE,CAAS,EACpB,CAAS,EAAE,CAAS,IACjB,SAAE,CAAC,GAAG,CAAC;IACR,SAAS,EAAE,EAAE,CAAC,KAAE,CAAC,KAAE;IACnB,MAAM,EAAE,EAAE,CAAC,KAAE,CAAC,KAAE;IAChB,OAAO,EAAE,EAAE,OAAO,WAAE,SAAS,aAAE,OAAO,EAAE,KAAK,EAAE;CAChD,CAAC,EAJC,CAID,CAAC;AAEL,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,8BAAa;IACb,8BAAa;IACb,gCAAe;IACf,4BAAW;IACX,kCAAiB;AACnB,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;AACM,IAAM,SAAS,GAAG;IACvB,MAAM,YACJ,EAAU,EAAE,EAAU,EAAE,EAAU,EAClC,EAAU,EAAE,EAAU,EAAE,EAAU;QAElC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CACpB,UAAC,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC;YACd,UAAC,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EACf,CAAC;QACF,OAAO,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3B,CAAC;IACD,SAAS,YACP,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU;QAEtB,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,aAAa,CAAC,IAAI,CAAC;QACxE,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;QACtC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;QACtC,OAAO,EAAE,GAAG,EAAE;YACZ,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK;YACpD,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC;IACzD,CAAC;IACD,MAAM,YACJ,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU;QAEtB,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,aAAa,CAAC,GAAG,CAAC;QACtC,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,aAAa,CAAC,MAAM,CAAC;QACzC,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,aAAa,CAAC,IAAI,CAAC;QACvC,IAAI,EAAE,GAAG,EAAE;YAAE,OAAO,aAAa,CAAC,KAAK,CAAC;QACxC,OAAO,aAAa,CAAC,IAAI,CAAC;IAC5B,CAAC;CACF,CAAC;;;;;;;;;;;;;;;;ACnF4B;AAE9B,0DAA0D;AAEnD,IAAM,KAAK,GAAQ,EAAE,CAAC;AAE7B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;IAC9B,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAmB,CAAC;IACnE,KAAK,CAAC,GAAG,GAAG;QAAC,aAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,wBAAgB;;QAAK,QAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAApC,CAAoC,CAAC;IACvE,KAAK,CAAC,GAAG,GAAG;QAAC,aAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,wBAAgB;;QAC3B,QAAC,OAAO,CAAC,SAAS,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAA9C,CAA8C,CAAC;IAEjD,IAAM,IAAI,GAAgB,IAAI,GAAG,EAAE,CAAC;IACpC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAC,EAAQ;YAAN,IAAI;QAAO,WAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IAAd,CAAc,CAAC,CAAC;IACjE,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,EAAQ;YAAN,IAAI;QAAO,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAAjB,CAAiB,CAAC,CAAC;IAElE,IAAM,KAAK,GAAG,GAAG,CAAC;IAClB,IAAM,MAAM,GAAG,GAAG,CAAC;IAEnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB,CAAC;IAEtE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IAEvB,2CAAI,CAAC;QACH,MAAM;QACN,KAAK;QACL,MAAM;QACN,IAAI;QACJ,GAAG,EAAE,IAAI,GAAG,EAAE;KACf,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCiC;AACF;AACA;AAEe;AACjB;AACI;AACE;AACK;AAEP;AAU7B,IAAM,IAAI,GAAG,UAAO,MAAkB;;;;;gBAC3C,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACpB,KAAK,GAAgC,MAAM,MAAtC,EAAE,MAAM,GAAwB,MAAM,OAA9B,EAAE,IAAI,GAAkB,MAAM,KAAxB,EAAE,MAAM,GAAU,MAAM,OAAhB,EAAE,GAAG,GAAK,MAAM,IAAX,CAAY;gBAC9C,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACpC,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBAE9D,YAAY,GAAG,2CAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACvE,OAAO,GAAG,IAAI,6CAAO,EAAE,CAAC;gBAE9B,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC5B,KAAK,GAAG,IAAI,yCAAK,CAAC;oBACtB,KAAK;oBACL,MAAM;oBACN,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,UAAU;iBACrB,CAAC,CAAC;gBAEH,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;gBAC9B,KAQF,iDAAO,CAAC,KAAK,EAAE,YAAY,CAAC,EAP9B,SAAS,iBACT,UAAU,kBACV,cAAc,sBACd,QAAQ,gBACR,iBAAiB,yBACjB,eAAe,uBACf,eAAe,sBACgB;gBAEjC,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;gBAC/B,EAAE,GAAG,IAAI,0DAAa,CAAC,wCAAU,CAAC,CAAC;gBASrC,qBAAM,mDAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC;;gBARtC,KAQF,SAAwC,EAP1C,YAAY,oBACZ,wBAAwB,gCACxB,wBAAwB,gCACxB,kBAGC,EAFC,kBAAkB,0BAClB,kBAAkB;gBAItB,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBAC9C,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrD,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtC,OAAO,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClD,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC3C,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC5D,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAElE,SAAS;gBACT,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;gBAE5B,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBAC5D,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBAC5D,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAChD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAChD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBACzD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBACzD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBACzD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBAEzD,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBAGtD,WAAW,GAAG,iDAAS,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBAC3C,WAAW,GAAG,iDAAS,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBAG3C,MAAM,GAAG,UAAC,EAAU;oBACxB,WAAW,CAAC,CAAC,EAAE,CAAC;oBAChB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAElC,SAAS,CAAC,EAAE,CAAC,CAAC;oBACd,OAAO,CAAC,EAAE,CAAC,CAAC;oBACZ,IAAI,CAAC,EAAE,CAAC,CAAC;oBACT,SAAS,CAAC,EAAE,CAAC,CAAC;oBAEd,SAAS,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,WAAW,CAAC,CAAC,EAAE,CAAC;gBAClB,CAAC,CAAC;gBAEI,MAAM,GAAG,UAAC,EAAU;oBACxB,WAAW,CAAC,CAAC,EAAE,CAAC;oBAChB,IAAI,CAAC,EAAE,CAAC,CAAC;oBACT,aAAa,CAAC,EAAE,CAAC,CAAC;oBAClB,OAAO,CAAC,EAAE,CAAC,CAAC;oBACZ,WAAW,CAAC,CAAC,EAAE,CAAC;gBAClB,CAAC,CAAC;gBAEF,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC5B,MAAM,GAAG,IAAI,2CAAM,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC9D,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,wCAAwC;gBACxC,UAAU,CAAC;oBACT,MAAM,CAAC,IAAI,EAAE,CAAC;oBACd,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;gBACxC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,6CAA6C;;;;KAC7D,CAAC;;;;;;;;;;;;;;;;;;;ACxHwC;AAWpB;AAIH;AAEO;AAElB,aAAS,GAAa,+CAAS,UAAtB,EAAE,MAAM,GAAK,+CAAS,OAAd,CAAe;AAEjC,SAAS,OAAO,CAAC,KAAY,EAAE,QAAgB;IACpD,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAEjC,SAAK,GAAa,KAAK,MAAlB,EAAE,MAAM,GAAK,KAAK,OAAV,CAAW;IAChC,OAAO;QACL,wCAAwC;QACxC,cAAc,EAAE,IAAI,mDAAM,CACxB,EAAE,SAAS,sDAAE,SAAS,sDAAE,MAAM,mDAAE,KAAK,kDAAE,EACvC,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ;YACV,SAAW,IAAI,CAAC,SAAS,CAAC,OAAO,EAA/B,CAAC,SAAE,CAAC,OAA2B,CAAC;YAClC,SAAa,IAAI,CAAC,SAAS,CAAC,OAAO,EAAjC,EAAE,UAAE,EAAE,QAA2B,CAAC;YACpC,SAAW,IAAI,CAAC,MAAM,CAAC,OAAO,EAA5B,CAAC,SAAE,CAAC,OAAwB,CAAC;YAC7B,OAAG,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAvB,CAAwB;YACnC,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAM,aAAa,GAAG,MAAM,CAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAC3B,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CACpB,CAAC;gBACF,IAAI,aAAa,IAAI,mDAAa,CAAC,IAAI;oBAAE,SAAS;gBAClD,QAAQ,aAAa,EAAE,CAAC;oBACtB,KAAK,mDAAa,CAAC,IAAI;wBAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,MAAM;oBACpD,KAAK,mDAAa,CAAC,KAAK;wBAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAAC,MAAM;oBAChE,KAAK,mDAAa,CAAC,GAAG;wBAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,MAAM;oBACnD,KAAK,mDAAa,CAAC,MAAM;wBAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;wBAAC,MAAM;gBACpF,CAAC;YACH,CAAC;QACH,CAAC,CACF;QAED,yCAAyC;QACzC,aAAa,EAAE,IAAI,mDAAM,CACvB,EAAE,SAAS,sDAAE,SAAS,sDAAE,MAAM,mDAAE,KAAK,kDAAE,EACvC,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ;YAChB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;YACvC,kDAAkD;YAClD,yDAAyD;YACzD,4CAA4C;YAC5C,sDAAsD;YACtD,QAAQ;YACR,oBAAoB;YACpB,oEAAoE;YACpE,kCAAkC;QACpC,CAAC,CACF;QAED,4DAA4D;QAC5D,cAAc,EAAE,IAAI,mDAAM,CACxB,EAAE,SAAS,sDAAE,SAAS,sDAAE,MAAM,mDAAE,KAAK,kDAAE,EACvC,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM;YAClB,SAAW,IAAI,CAAC,SAAS,CAAC,OAAO,EAA/B,CAAC,SAAE,CAAC,OAA2B,CAAC;YAClC,SAAa,IAAI,CAAC,SAAS,CAAC,OAAO,EAAjC,EAAE,UAAE,EAAE,QAA2B,CAAC;YACpC,SAAW,IAAI,CAAC,MAAM,CAAC,OAAO,EAA5B,CAAC,SAAE,CAAC,OAAwB,CAAC;YAC7B,OAAG,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAvB,CAAwB;YACnC,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,eAAe,GAAG,CAAC,CAAC;gBACxB,KAAgB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE,CAAC;oBAApB,IAAM,CAAC;oBACV,IAAI,eAAe,GAAG,CAAC;wBAAE,MAAM;oBAC/B,IAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAM,aAAa,GAAG,SAAS,CAC7B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAC3B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAC5B,CAAC;oBACF,qBAAqB;oBACrB,oCAAK,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,UAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxJ,IAAI,aAAa,KAAK,mDAAa,CAAC,IAAI;wBAAE,SAAS;oBACnD,IAAI,aAAa,KAAK,mDAAa,CAAC,MAAM;wBAAE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAC,CAAC,CAAC,CAAC;oBACzE,eAAe,EAAE,CAAC;oBAClB,QAAQ,aAAa,EAAE,CAAC;wBACtB,KAAK,mDAAa,CAAC,MAAM;4BAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;4BAAC,MAAM;wBAChF,KAAK,mDAAa,CAAC,KAAK;4BAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;4BAAC,MAAM;wBACtE,KAAK,mDAAa,CAAC,IAAI;4BAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;4BAAC,MAAM;wBAChE,KAAK,mDAAa,CAAC,GAAG;4BAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;4BAAC,MAAM;oBAC3D,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CACF;QAED,uCAAuC;QACvC,SAAS,EAAE,IAAI,mDAAM,CACnB,EAAE,SAAS,sDAAE,SAAS,sDAAE,KAAK,kDAAE,EAC/B,UAAC,EAAE,EAAE,IAAI,EAAE,QAAQ;YACX,SAAW,IAAI,CAAC,SAAS,CAAC,OAAO,EAA/B,CAAC,SAAE,CAAC,OAA2B,CAAC;YAClC,SAAa,IAAI,CAAC,SAAS,CAAC,OAAO,EAAjC,EAAE,UAAE,EAAE,QAA2B,CAAC;YAClC,OAAG,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAvB,CAAwB;YAC3B,YAAQ,GAAc,KAAK,SAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;YACpC,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACnB,wEAAwE;gBACxE,EAAE,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC;gBAClB,EAAE,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;YACnB,CAAC;QACH,CAAC,CACF;QAED,0CAA0C;QAC1C,QAAQ,EAAE,IAAI,mDAAM,CAAC,EAAE,OAAO,oDAAE,SAAS,sDAAE,EAAE,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ;YACvD,SAAoD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAtE,OAAO,eAAE,SAAS,iBAAE,OAAO,eAAE,OAAO,eAAE,OAAO,aAAyB,CAAC;YACzE,SAAW,IAAI,CAAC,SAAS,CAAC,OAAO,EAA/B,CAAC,SAAE,CAAC,OAA2B,CAAC;YACxC,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACnC,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC5D,QAAQ,CAAC,IAAI,CACX,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;YACJ,CAAC;QACH,CAAC,CAAC;QAEF,yCAAyC;QACzC,UAAU,EAAE,IAAI,mDAAM,CAAC,EAAE,UAAU,uDAAE,OAAO,oDAAE,EAAE,UAAC,EAAE,EAAE,IAAI,EAAE,QAAQ;YAC3D,SAA8C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAnE,UAAU,kBAAE,OAAO,eAAE,MAAM,cAAE,IAAI,YAAE,IAAI,UAA4B,CAAC;YACpE,aAAS,GAAK,IAAI,CAAC,OAAO,CAAC,OAAO,UAAzB,CAA0B;YAC3C,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACvD,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACtB,CAAC;QACH,CAAC,CAAC;QAEF,2BAA2B;QAC3B,WAAW,EAAE,IAAI,mDAAM,CACrB,EAAE,SAAS,sDAAE,MAAM,mDAAE,OAAO,oDAAE,KAAK,kDAAE,UAAU,uDAAE,EACjD,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ;YACR,WAAO,GAAK,IAAI,CAAC,OAAO,CAAC,OAAO,QAAzB,CAA0B;YACjC,WAAO,GAAK,IAAI,CAAC,UAAU,CAAC,OAAO,QAA5B,CAA6B;YACpC,QAAI,GAAK,IAAI,CAAC,MAAM,CAAC,OAAO,KAAxB,CAAyB;YAC/B,SAAa,IAAI,CAAC,SAAS,CAAC,OAAO,EAAjC,EAAE,UAAE,EAAE,QAA2B,CAAC;YACpC,SAAiB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAjC,GAAG,WAAE,KAAK,WAAuB,CAAC;YAC1C,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAClB,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,SAAS;gBACX,CAAC;gBACD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAO,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAC9E,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACpF,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,CAAC;QACH,CAAC,CACF;QAED,yCAAyC;QACzC,iBAAiB,EAAE,IAAI,mDAAM,CAC3B,EAAE,SAAS,sDAAE,MAAM,mDAAE,KAAK,kDAAE,UAAU,uDAAE,EACxC,UAAC,CAAC,EAAE,IAAI,EAAE,QAAQ;YACV,SAAoB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAzC,OAAO,eAAE,IAAI,UAA4B,CAAC;YAC1C,QAAI,GAAK,IAAI,CAAC,MAAM,CAAC,OAAO,KAAxB,CAAyB;YAC/B,SAAa,IAAI,CAAC,SAAS,CAAC,OAAO,EAAjC,EAAE,UAAE,EAAE,QAA2B,CAAC;YACpC,SAAiB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAjC,GAAG,WAAE,KAAK,WAAuB,CAAC;YAC1C,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAClB,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG;oBACb,SAAS;gBACX,CAAC;gBACD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAO,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBAC1E,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC/E,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,CAAC;QACH,CAAC,CACF;QAED,+CAA+C;QAC/C,+BAA+B;QAC/B,qCAAqC;QACrC,wBAAwB;QACxB,eAAe,EAAE,IAAI,mDAAM,CACzB,EAAE,OAAO,oDAAE,UAAU,uDAAE,EACvB,UAAC,EAAE,EAAE,IAAI,EAAE,QAAQ;YACX,SAA2C,IAAI,CAAC,OAAO,CAAC,OAAO,EAA7D,OAAO,eAAE,OAAO,eAAE,OAAO,eAAE,SAAS,eAAyB,CAAC;YAChE,SAA6B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAlD,IAAI,YAAE,IAAI,YAAE,UAAU,gBAA4B,CAAC;YAC3D,yCAAyC;YACzC,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACnD,QAAQ,CAAC,IAAI,CACX,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;gBACF,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACtB,CAAC;QACH,CAAC,CACF;QACD,eAAe,EAAE,IAAI,mDAAM,CACzB,EAAE,OAAO,oDAAE,UAAU,uDAAE,EACvB,UAAC,EAAE,EAAE,IAAI,EAAE,QAAQ;YACX,SAA2C,IAAI,CAAC,OAAO,CAAC,OAAO,EAA7D,OAAO,eAAE,OAAO,eAAE,OAAO,eAAE,SAAS,eAAyB,CAAC;YAChE,SAAiB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAtC,IAAI,YAAE,IAAI,UAA4B,CAAC;YAC/C,KAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE,CAAC;gBAAtB,IAAM,CAAC;gBACV,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACjD,QAAQ,CAAC,IAAI,CACX,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;gBACF,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACtB,CAAC;QACH,CAAC,CACF;KACF,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpOD;IACE,uBACW,MAAS,EACT,IAAc,EACf,IAAU;QADT,gCAAc;QACf,+BAAQ,CAAC,CAAC;QAFT,WAAM,GAAN,MAAM,CAAG;QACT,SAAI,GAAJ,IAAI,CAAU;QACf,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,4BAAI,GAAJ;QAAK,YAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,uBAAU;;QACb,IAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,KAAgB,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE,EAAE,CAAC;YAAhB,IAAM,CAAC;YACV,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;YAChC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,8CAA8C;YAC9C,iDAAiD;YACjD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,8BAAM,GAAN;QAAO,YAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,uBAAe;;QACpB,KAAgB,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE,EAAE,CAAC;YAAhB,IAAM,CAAC;YACV,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAMD,sBAAI,iCAAM;QAJV,mBAAmB;QACnB,SAAS;QACT,IAAI;QACJ,EAAE;aACF;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAI,iCAAM;aAAV;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;;;OAAA;IACH,oBAAC;AAAD,CAAC;;AAED,2BAA2B;AAC3B;IAAoC,kCAAK;IAAzC;;IACA,CAAC;IAAD,qBAAC;AAAD,CAAC,CADmC,KAAK,GACxC;;AAIM,IAAM,SAAS,GAAG,UAAC,IAAgB,EAAE,cAAmB,EAAE,UAAc;IAArD,uCAAgB;IAAE,oDAAmB;IAAE,2CAAc;IAC7E,IAAI,WAAW,GAAG,QAAQ,CAAC;IAC3B,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAI,cAAc,GAAG,cAAc,CAAC;IAEpC,IAAM,OAAO,GAAG,EAAE,CAAC;IACnB,IAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,IAAM,CAAC,GAAG,cAAM,eAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,EAA5B,CAA4B,CAAC;IAE7C,IAAM,CAAC,GAAG;QACR,IAAM,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;QACxC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,QAAQ,EAAE,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvB,OAAO;QACT,CAAC;QACD,cAAc,EAAE,CAAC;QACjB,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjB,IAAI,WAAW,GAAG,EAAE;YAAE,WAAW,GAAG,EAAE,CAAC;QACvC,IAAI,WAAW,GAAG,EAAE;YAAE,WAAW,GAAG,EAAE,CAAC;QACvC,IAAI,cAAc,GAAG,CAAC;YAAE,OAAO;QAC/B,cAAc,GAAG,cAAc,CAAC;QAChC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC;IACV,CAAC;IACD,IAAM,GAAG,GAAG,UAAC,IAAY,IAAK,QAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,EAAlB,CAAkB,CAAC;IACjD,IAAM,KAAK,GAAG,cAAM,cAAO,CAAC,MAAM,GAAG,CAAC,EAAlB,CAAkB,CAAC;IACvC,IAAM,MAAM,GAAG,UAAC,GAAa,IAAK,UAAG,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC,IAAK,UAAG,IAAI,CAAC,EAAR,CAAQ,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAhD,CAAgD,CAAC;IACnF,IAAM,KAAK,GAAG,UAAC,GAAW,IAAK,QAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAxB,CAAwB,CAAC;IACxD,IAAM,MAAM,GAAG,UAAC,GAAW,IAAK,UAAG,GAAG,CAAC,IAAI,GAAG,GAAG,QAAQ,EAAzB,CAAyB,CAAC;IAE1D,IAAM,WAAW,GAAG,cAAM,QAAC;QACzB,IAAI;QACJ,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC;QACvB,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC;QACvB,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;KAC3C,CAAC,EALwB,CAKxB,CAAC;IAEH,IAAM,UAAU,GAAG,cAAM,QAAC;QACxB,IAAI;QACJ,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/B,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/B,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;KACvD,CAAC,EANuB,CAMvB;IAEF,OAAO,EAAE,CAAC,KAAE,CAAC,KAAE,WAAW,eAAE,UAAU,cAAE,CAAC;AAC3C,CAAC;;;;;;;;;;;;;;;;;AChGD;IASE,eAAY,EAA8C;YAA5C,KAAK,aAAE,MAAM,cAAE,OAAO,eAAE,QAAQ,gBAAE,QAAQ;QACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,wBAAQ,GAAR,UAAS,KAAY;QACnB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,+BAAe,GAAf;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IACH,YAAC;AAAD,CAAC;;AAED;;;EAGE;AACF,IAAY,aAEX;AAFD,WAAY,aAAa;IACvB,mDAAc;AAChB,CAAC,EAFW,aAAa,KAAb,aAAa,QAExB;AAaD,kDAAkD;AAClD;IAKE,eACW,IAAY,EACb,GAAe,EACf,OAA+B;QAF9B,SAAI,GAAJ,IAAI,CAAQ;QACb,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAwB;QAEvC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,UAAI,GAAX,UAAY,IAAY,EAAE,MAAmB;QAC3C,iCAAiC;QACzB,OAAG,GAAc,MAAM,IAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;QAChC,IAAM,aAAa,GAAG,IAAI,GAAG,EAAqB,CAAC;QACnD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,EAAY;gBAAX,GAAG,UAAE,KAAK;YAC1C,oBAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAkB,CAAC;QAA3C,CAA2C,CAC5C,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,EAAY;gBAAX,GAAG,UAAE,KAAK;YAC1C,6BAA6B;QAC/B,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;IAC7C,CAAC;IAEO,yBAAS,GAAjB,UAAkB,IAAmB;QACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,QAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,EAAd,CAAc,CAAC,EAAhC,CAAgC,CAAC,CAAC;QACzE,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEO,kCAAkB,GAA1B;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;UCtFD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://g0/./src/adapter.ts","webpack://g0/./src/bitmap.ts","webpack://g0/./src/components.ts","webpack://g0/./src/ecs/simple.ecs.ts","webpack://g0/./src/engine.ts","webpack://g0/./src/entities.ts","webpack://g0/./src/helpers.ts","webpack://g0/./src/index.ts","webpack://g0/./src/main.ts","webpack://g0/./src/systems.ts","webpack://g0/./src/utils.ts","webpack://g0/./src/world.ts","webpack://g0/webpack/bootstrap","webpack://g0/webpack/runtime/define property getters","webpack://g0/webpack/runtime/hasOwnProperty shorthand","webpack://g0/webpack/runtime/make namespace object","webpack://g0/webpack/before-startup","webpack://g0/webpack/startup","webpack://g0/webpack/after-startup"],"sourcesContent":["import { IAdapter, IImage } from \"./common/types\";\n\nexport class Adapter implements IAdapter {\n  /** Load image\n  * @param src URI\n  * @returns image\n  * */\n  loadImage(src: string): Promise<IImage> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        const { width, height } = image;\n        canvas.width = width;\n        canvas.height = height;\n        context.drawImage(image, 0, 0);\n        const imageData = context.getImageData(0, 0, width, height);\n        return resolve({ width, height, data: imageData.data.buffer });\n      };\n      image.onerror = (error) => {\n        console.error(\"ADAPTER: Error loading image:\", src);\n        reject(error);\n      };\n      image.src = src;\n    });\n  }\n\n  /** Pause execution\n  * @param ms period in milliseconds\n  * */\n  sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /** Get current time in milliseconds\n  * @returns time\n  * */\n  now(): number {\n    return performance.now();\n  }\n}\n\n","/* Bitmap */\nexport class Bitmap {\n  readonly width: number;\n  readonly height: number;\n  protected data: Uint32Array;\n\n  /** Create new Bitmap with empty pixels\n  * @param width new Bitmap width\n  * @param height new Bitmap height */\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.data = new Uint32Array(width * height);\n  }\n\n  /** Create Bitmap from buffer\n  * @param buffer buffer with color values\n  * @param width new Bitmap width\n  * @param height new Bitmap height\n  * @returns new Bitmap */\n  public static from(buffer: ArrayBuffer, width: number, height: number): Bitmap {\n    const bitmap = new Bitmap(width, height);\n    bitmap.data = new Uint32Array(buffer);\n    return bitmap;\n  }\n\n  /** Get pixels array\n  * @returns Uint32Array which represents pixels */\n  public get pixels(): Uint32Array {\n    return this.data;\n  }\n\n  /** Draw Bitmap on self\n  * @param bitmap source Bitmap to draw\n  * @param x destination offset x\n  * @param y destination offset y\n  * @returns self */\n  public draw(bitmap: Bitmap, x: number, y: number): this {\n    const { data: dest, width: dw, height: dh } = this;\n    const { data: src,  width: sw } = bitmap;\n    let i = src.length;\n    while (i--) {\n      if (src[i] === 0) continue;\n      const px = x + (i % sw);\n      const py = y + (i / sw | 0);\n      if (px < 0 || px >= dw || py < 0 || py >= dh) continue;\n      dest[px + py * dw] = src[i];\n    }\n    return this;\n  }\n\n  /** Copy to Bitmap area of self\n  * @param bitmap destination Bitmap\n  * @param x destination offset x\n  * @param y destination offset y\n  * @param sx source offset x\n  * @param sy source offset y\n  * @param width area width to copy\n  * @param height area height to copy\n  * @returns self */\n  public copy(bitmap: Bitmap, x: number, y: number, sx: number, sy: number, width: number, height: number): this {\n    const { data: dest, width: dw, height: dh } = bitmap;\n    const { data: src,  width: sw } = this;\n    let i = width * height;\n    while (i--) {\n      const j = (sx + i % width) + (sy + (i / width | 0)) * sw;\n      if (src[j] == 0) continue;\n      const px = x + (i % width);\n      const py = y + (i / width | 0);\n      if (px < 0 || px >= dw || py < 0 || py >= dh) continue;\n      dest[px + py * dw] = src[j];\n    }\n    return this;\n  }\n\n  /** Extract pixels to new Bitmap\n  * @param x source offset x\n  * @param y source offset y\n  * @param width new Bitmap width\n  * @param height new Bitam height\n  * @returns new Bitmap */\n  public extract(x: number, y: number, width: number, height: number): Bitmap {\n    const bitmap = new Bitmap(width, height);\n    const { data: src,  width: sw, height: sh } = this;\n    const { data: dest, width: dw } = bitmap;\n    let i = dest.length;\n    while (i--) {\n      const px = x + (i % dw);\n      const py = y + (i / dw | 0);\n      if (px < 0 || px >= sw || py < 0 || py >= sh) continue;\n      dest[i] = src[px + py * sw];\n    }\n    return bitmap;\n  }\n\n  /** Clone self to new Bitmap\n  * @returns new Bitmap */\n  public clone(): Bitmap {\n    const bitmap = new Bitmap(this.width, this.height);\n    const { data: dest } = bitmap;\n    const { data: src } = this;\n    let i = dest.length;\n    while (i--) dest[i] = src[i];\n    return bitmap;\n  }\n\n  /** Fill self with color\n  * @param color color to fill\n  * @returns self */\n  public fill(color: number): this {\n    this.data.fill(color);\n    return this;\n  }\n\n  /** Vertical flip\n  * @returns self */\n  public flipV(): this {\n    const { data, width } = this;\n    let i = data.length;\n    while (i--) {\n      const px = width - (i % width) - 1;\n      if (px >=  width / 2) continue;\n      const py = i / width | 0;\n      const pi = px + py * width;\n      const temp = data[i];\n      data[i] = data[pi];\n      data[pi] = temp;\n    }\n    return this;\n  }\n\n  /** Horizontal flip\n  * @returns self */\n  public flipH(): this {\n    const { data, width, height } = this;\n    let i = data.length / 2;\n    while (i--) {\n      const px = i % width;\n      const py = height - (i / width | 0) - 1;\n      const pi = px + py * width;\n      const temp = data[i];\n      data[i] = data[pi];\n      data[pi] = temp;\n    }\n    return this;\n  }\n}\n\n/* TileableBitmap */\nexport class TileableBitmap extends Bitmap {\n  readonly twidth: number;\n  readonly theight: number;\n  readonly cols: number;\n  readonly rows: number;\n\n  /** Create new TileableBitmap with empty pixels\n  * @param twidth width of the tile\n  * @param theight height of the tile\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical */\n  constructor(twidth: number, theight: number, cols: number, rows: number) {\n    super(twidth * cols, theight * rows);\n    this.twidth = twidth;\n    this.theight = theight;\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  /** Create TileableBitmap from buffer\n  * @param buffer buffer with color values\n  * @param twidth width of the tile\n  * @param theight height of the tile\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical\n  * @returns new TileableBitmap */\n  public static from(buffer: ArrayBuffer, twidth: number, theight: number, cols: number = 1, rows: number = 1): TileableBitmap {\n    const tbitmap = new TileableBitmap(twidth, theight, cols, rows);\n    tbitmap.data = new Uint32Array(buffer);\n    return tbitmap;\n  }\n\n  /** Extract tile to new Bitmap\n  * @param col tile location by x\n  * @param row tile location by y\n  * @returns new Bitmap */\n  public extractTile(col: number, row: number): Bitmap {\n    return this.extract(\n      col * this.twidth,\n      row * this.theight,\n      this.twidth,\n      this.theight,\n    );\n  }\n\n  /** Copy to Bitmap one tile of self\n  * @param bitmap destination Bitmap\n  * @param x destination offset x\n  * @param y destination offset y\n  * @param col tile location by x\n  * @param row tile location by y\n  * @returns self */\n  public copyTile(bitmap: Bitmap, x: number, y: number, col: number, row: number): this {\n    return this.copy(\n      bitmap, x, y,\n      col * this.twidth,\n      row * this.theight,\n      this.twidth,\n      this.theight,\n    );\n  }\n\n  /** Split TileableBitmap to array of Bitmaps\n  * @returns array of Bitmaps */\n  public split(): Bitmap[] {\n    const bitmaps = [];\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.cols; col++) {\n        const x = col * this.twidth;\n        const y = row * this.theight;\n        bitmaps.push(this.extract(x, y, this.twidth, this.twidth));\n      }\n    }\n    return bitmaps;\n  }\n\n  /** Create new TileableBitmap by reordering tiles of self\n  * @param order indexes of source tiles by col * row\n  * @param cols total number of tiles in horizontal\n  * @param rows total number of tiles in vertical\n  * @returns new TileableBitmap */\n  public reorder(order: number[], cols: number, rows: number): TileableBitmap {\n    const { twidth, theight, cols: scols } = this;\n    const tbitmap = new TileableBitmap(twidth, theight, cols, rows);\n    let i = cols * rows;\n    while(i--) {\n      const j = order[i];\n      const [dc, dr] = [i % cols, i / cols | 0];\n      const [sc, sr] = [j % scols, j / scols | 0];\n      this.copyTile(tbitmap, dc * twidth, dr * theight, sc, sr);\n    }\n    return tbitmap;\n  }\n}\n\n/* BitmapPallete */\nexport class BitmapPallete {\n  private palleteData: Uint32Array;\n  readonly palleteMap: Uint8Array;\n  readonly bitmap: Bitmap;\n\n  /** Create new BitmapPallete attached to Bitmap\n  * @param bitmap source Bitmap */\n  constructor(bitmap: Bitmap) {\n    this.bitmap = bitmap;\n    const pixels = bitmap.pixels;\n    const map = [] as number[];\n    const colors = [] as number[];\n    let i = pixels.length;\n    while (i--) {\n      const pixel = pixels[i];\n      const idx = colors.indexOf(pixel);\n      if (idx < 0) {\n        map[i] = colors.length;\n        colors.push(pixel);\n      } else map[i] = idx;\n    }\n    this.palleteMap = new Uint8Array(map);\n    this.palleteData = new Uint32Array(colors);\n  }\n\n  /** Get pallete as array of numbers\n  * @returns colors */\n  public get pallete(): number[] {\n    return Array.from(this.palleteData);\n  }\n\n  /** Set new pallete and apply on source Bitmap\n  * @param pallete new pallete to apply */\n  public set pallete(pallete: number[]) {\n    this.palleteData.set(pallete);\n    this.remap();\n  }\n\n  /** Apply pallete on source Bitmap */\n  protected remap(): void {\n    const { \n      bitmap: { pixels },\n      palleteData,\n      palleteMap,\n    } = this;\n    let i = pixels.length;\n    while (i--) pixels[i] = palleteData[palleteMap[i]];\n  }\n}\n","import { Bitmap } from \"./bitmap\";\nimport { Component } from \"./ecs/simple.ecs\";\n\nconsole.debug(\"COMPONENTS: definitions\");\n\nexport const cPosition = new Component<{ x: number; y: number }>({\n  x: 0,\n  y: 0,\n});\n\nexport const cVelocity = new Component<{ vx: number; vy: number }>({\n  vx: 0,\n  vy: 0,\n});\n\nexport const cShape = new Component<{ w: number; h: number }>({\n  w: 0,\n  h: 0,\n});\n\nexport const cSprite = new Component<{\n  spriteIdx: number;\n  sprites: Bitmap[];\n  flipped?: boolean;\n  offsetX?: number,\n  offsetY?: number,\n}>({\n  spriteIdx: 0,\n  sprites: [],\n  flipped: false,\n  offsetX: 0,\n  offsetY: 0\n});\n\nexport const cAnimation = new Component<{\n  animations: number[][];\n  current: number;\n  length: number;\n  time: number;\n  coef: number;\n}>({\n  animations: [[]],\n  current: 0,\n  length: 0,\n  time: 0,\n  coef: 0,\n});\n\nexport const cInput = new Component<{ keys: Set<string> }>({\n  keys: new Set(),\n});\n\nexport const cMeta = new Component<{ air: boolean; speed: number }>({\n  air: false,\n  speed: 0,\n});\n\n// export const cAnimatedBg = new Component<{ x: number, w: number, vx: number, lastx?: number }>({\n//   x: 0,\n//   w: 0,\n//   vx: 0,\n//   lastx: 0,\n// });\n// \n// // TODO: investigate possibility of using world as a component\n// export const cWorld = new Component<{\n//   width: number,\n//   height: number,\n//   gravity: number,\n//   friction: number,\n//   viewport: Bitmap,\n// }>({\n//   width: 0,\n//   height: 0,\n//   gravity: 0,\n//   friction: 0,\n//   viewport: new Bitmap(0, 0),\n// });\n","import { Imutable } from \"../common/types\";\n\n/* EntityManager */\nexport class EntityManager<T extends Record<string, Component<any>>> {\n  private idx = 0;\n  /** Create new Entity Manager\n  * @param components components dictionary */\n  constructor(private components: T) {}\n\n  /** Add new entity with properties for components\n  * @param components components entity have\n  * @returns entity index */\n  add<K extends keyof T>(components: Record<K, typeof this.components[K][\"schema\"]>): number {\n    const entries = Object.entries(components);\n    for (const [componentName, component] of entries){\n      this.components[componentName].set(this.idx, component);\n    }\n    return this.idx++;\n  }\n\n  /** Assign new properties for components for entity\n  * @param idx entity index\n  * @param components new components values */\n  set<K extends keyof T>(idx: number, components: { [P in K]: T[P][\"schema\"] }): void {\n    const entries = Object.entries(this.components);\n    for (const [componentName, component] of entries) {\n      component.set(idx, components?.[componentName] || {})\n    }\n  }\n\n  /** Build readonly object of all entity components\n  * @param idx entity index\n  * @returns readonly entity object */\n  get<K extends keyof T>(idx: number): Imutable<{ [P in K]: T[P][\"schema\"] }> {\n    const entries = Object.entries(this.components);\n    const result = {} as { [P in K]: T[P][\"schema\"] };\n    for (const [componentName, component] of entries){\n      result[componentName] = component.get(idx);\n    }\n    return result;\n  }\n\n  /** Reset Entity Manager and remove all entities data */\n  reset(): void {\n    const components = Object.values(this.components);\n    for (const component of components) component.reset();\n    this.idx = 0;\n  }\n}\n\n/* Component */\nexport type Storage<T> = { [K in keyof T]: T[K][] };\nexport class Component<T extends Object> {\n  readonly schema: Imutable<T>;\n  readonly storage: Imutable<Storage<T>>;\n  /** Create new Component\n  * @param schema Plain object with properties */\n  constructor(schema: T) {\n    this.schema = schema;\n    this.storage = Object.keys(schema).reduce(\n      (acc, key) => ({ ...acc, [key]: [] }),\n      {} as Storage<T>,\n    );\n  }\n\n  /** Build readonly object of Component element\n  * @param idx entity index\n  * @returns readonly Component object */\n  get(idx: number): Imutable<T> {\n    const { storage } = this;\n    const element = {} as T;\n    for (const prop in storage) element[prop] = storage[prop][idx];\n    return element;\n  }\n\n  /** Assign new values for Component element\n  * @param idx entity index\n  * @param data new values\n  * @returns entity index */\n  set(idx: number, data: T): number {\n    const { storage } = this;\n    for (const prop in storage) storage[prop][idx] = data[prop] || this.schema[prop];\n    return idx;\n  }\n\n  /** Reset Component storage */\n  reset(): void {\n    const { storage } = this;\n    for (const prop in storage) storage[prop].length = 0;\n  }\n}\n\n/* System */\nexport type SystemHandler<T> = (\n  dt: number,\n  components: T,\n  ...entities: number[][]\n) => void;\nexport type SystemCallback = (dt?: number) => void;\nexport class System<T extends Record<string, Component<any>>> {\n  /** Create new System\n  * @param components components to use in the System\n  * @param handler callback with access to components */\n  constructor(\n    readonly components: T,\n    private handler: SystemHandler<T>,\n  ) {}\n\n  /** Create callback to execute the System\n  * @param entityGroups array of entity groups assigned to the System\n  * @returns callback */\n  setup(...entityGroups: number[][]): SystemCallback {\n    return (dt) => this.handler(dt, this.components, ...entityGroups);\n  }\n}\n","import { IAdapter } from \"./common/types\";\n\nexport type EngineHandler = (dt: number) => void;\n\nexport class Engine {\n  private timestamp: number = 0;\n  private running: boolean = false;\n\n  constructor(\n    private adapter: IAdapter,\n    private rate: number,\n    private update: EngineHandler,\n    private render: EngineHandler,\n    readonly deltaCoef: number = 0.05,\n  ) {}\n\n  async tick() {\n    while (this.running) {\n      const time = this.adapter.now();\n      const dt = (time - this.timestamp) * this.deltaCoef;\n      this.timestamp = this.adapter.now();\n      // calc next interval\n      await this.adapter.sleep(this.rate);\n      this.update(dt)\n      this.render(dt)\n    }\n  }\n\n  async tickTimeout() {\n    if (!this.running) return;\n\n    const time = this.adapter.now();\n    const dt = (time - this.timestamp) * this.deltaCoef;\n    this.timestamp = this.adapter.now();\n\n    this.update(dt)\n    this.render(dt)\n    \n    setTimeout(() => this.tick(), this.rate)\n  }\n\n  start() {\n    if (this.running) return;\n    this.running = true;\n    this.tick();\n    //this.tickTimeout();\n  }\n\n  stop() {\n    this.running = false;\n  }\n}\n","import { BitmapPallete } from \"./bitmap\";\nimport { IAdapter } from \"./common/types\";\nimport { EntityManager } from \"./ecs/simple.ecs\";\nimport { bulkTileableBitmapLoad } from \"./helpers\";\nimport { MainConfig } from \"./main\";\nimport { World } from \"./world\";\n\n// TODO: I dont like this function at all, added temporary\nexport async function Entities(em: EntityManager<any>, world: World, adapter: IAdapter, keys: MainConfig[\"keys\"]) {\n  console.debug(\"ENTITIES: load assets\");\n  const [playerTiles, blockTiles, bgTiles, houseTiles] = await bulkTileableBitmapLoad(\n    adapter,\n    [\"./assets/player.png\", 16, 16, 4, 1],\n    [\"./assets/platforms.png\", 16, 16, 4, 1],\n    [\"./assets/backgrounds.png\", 32, 32, 6, 1],\n    [\"./assets/backgrounds_houses.png\", 48, 32, 5, 1],\n  );\n  console.debug(\"ENTITIES: build graphics\");\n  const playerSprites = playerTiles.split().concat(playerTiles.flipV().split());\n  const blockSprites = blockTiles.split();\n  const bgSprites = bgTiles.split();\n  const houseSprites = houseTiles.split();\n\n  // TODO: make dedicated EM and components and systems for decorations\n  // TODO: use Level to build level assets\n  //           or make Level to use ids of assets\n  const animatedBgLength= 20;\n  const animatedBgLayers = [\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(0),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(0),animatedBgLength, 1),\n\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(2),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(1),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(4),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(5),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(5),animatedBgLength, 1),\n    bgTiles.reorder(Array.from<number>({ length: animatedBgLength }).fill(5),animatedBgLength, 1),\n  ];\n  const animatedBgPalletes = animatedBgLayers.map((bitmap) => new BitmapPallete(bitmap));\n\n  const animatedFgOrder =  [9, 9, 2, 9, 9, 3, 9, 9];\n  const animatedFgOrder2 = [9, 9, 0, 9, 9, 0, 9, 9];\n  const animatedFgLayers = [\n    houseTiles.reorder([\n      ...animatedFgOrder,\n      ...animatedFgOrder,\n      ...animatedFgOrder2,\n      ...animatedFgOrder2,\n      ...animatedFgOrder,\n      ...animatedFgOrder,\n      ...animatedFgOrder2,\n      ...animatedFgOrder2,\n    ], 16, 4),\n  ];\n  const animatedFgPalletes = animatedFgLayers.map((bitmap) => new BitmapPallete(bitmap));\n\n  console.debug(\"ENTITIES: define entities\");\n  // player\n  const playerEntity = em.add({\n    cPosition: { x: 32, y: 128 },\n    cVelocity: { vx: 0, vy: 0 },\n    cShape: { w: 10, h: 14 },\n    cMeta: { air: true, speed: 0.4 },\n    cInput: { keys },\n    cSprite: { spriteIdx: 0, sprites: playerSprites, offsetX: -3, offsetY: -2 },\n    cAnimation: {\n      animations: [ [0, 0, 3, 3], [1, 2, 3, 0], [1, 1, 2, 2] ],\n      current: 0,\n      length: 4,\n      time: 0,\n      coef: 0.4,\n    },\n  });\n\n  // platforms/blocks\n  const createPlatformEntity = (spriteIdx: number, x: number, y: number) => em.add({});\n\n  // bg & fg\n  const createAnimatedBgEntity = (spriteIdx: number, alt: number, speed: number) => em.add({\n    cAnimation: { animations: [[0]], current: 0, length: 0, time: 0, coef: speed },\n    cSprite: { sprites: animatedBgLayers, spriteIdx, offsetX: 0, offsetY: alt * 16 },\n  });\n  const animatedBgLayersEntities = [\n    createAnimatedBgEntity(2, 4, -1.0),\n    createAnimatedBgEntity(3, 5, -1.5),\n    createAnimatedBgEntity(4, 6, -2.0),\n    createAnimatedBgEntity(5, 7, -2.5),\n    createAnimatedBgEntity(6, 8, -3.0),\n    createAnimatedBgEntity(7, 9, -3.5),\n    createAnimatedBgEntity(0, 2, -1.0),\n    createAnimatedBgEntity(1, 1, -1.5),\n    createAnimatedBgEntity(0, 0, -2.0),\n  ]\n\n  const createAnimatedFgEntity = (spriteIdx: number, alt: number, speed: number) => em.add({\n    cAnimation: { animations: [[0]], current: 0, length: 0, time: 0, coef: speed },\n    cSprite: { sprites: animatedFgLayers, spriteIdx, offsetX: 0, offsetY: alt * 16 },\n  });\n  const animatedFgLayersEntities = [createAnimatedFgEntity(0, 5, -3)];\n\n  return {\n    // return graphics, just in case\n    tiles: { playerTiles, blockTiles, bgTiles, houseTiles },\n    sprites: { playerSprites, blockSprites, bgSprites, houseSprites },\n    fgBgLayers: { animatedFgLayers, animatedFgPalletes, animatedBgLayers, animatedBgPalletes },\n    // entities\n    playerEntity,\n    animatedFgLayersEntities,\n    animatedBgLayersEntities,\n  };\n}\n","/* helpers to make code in main smaller */\nimport { EntityManager } from \"./ecs/simple.ecs\";\nimport { Bitmap, TileableBitmap } from \"./bitmap\";\nimport { Adapter } from \"./adapter\";\n\nimport { debug } from \".\";\n\nexport type BulkTileableBitmapLoadingConfig = [\n  path: string,\n  w: number, h: number,\n  cols: number, rows: number,\n];\nexport const bulkTileableBitmapLoad = (\n  adapter: Adapter,\n  ...configs: BulkTileableBitmapLoadingConfig[]\n): Promise<TileableBitmap[]> =>\n  Promise.all(\n    configs.map(([path, w, h, cols, rows]) =>\n      adapter\n        .loadImage(path)\n        .then((img) => TileableBitmap.from(img.data, w, h, cols, rows))\n        .catch((error) => {\n          console.error(\"HELPERS: bulkTileableBitmapLoad\", path, error);\n          return TileableBitmap.from(new ArrayBuffer(w * h), w, h, cols, rows);\n        }),\n    ),\n  );\n\nexport const createStaticDrawableEntity = (\n  em: EntityManager<any>,\n  sprites: Bitmap[],\n  spriteIdx: number,\n  x: number, y: number,\n  w: number, h: number,\n) => em.add({\n    cPosition: { x, y },\n    cShape: { w, h },\n    cSprite: { sprites, spriteIdx, flipped: false },\n  });\n\nexport enum CollisionSide {\n  None = \"none\",\n  Left = \"left\",\n  Right = \"right\",\n  Top = \"top\",\n  Bottom = \"bottom\",\n}\nexport const collision = {\n  circle(\n    x0: number, y0: number, d0: number,\n    x1: number, y1: number, d1: number,\n  ): boolean {\n    const dist = Math.sqrt(\n      (x1 - x0) ** 2 + \n      (y1 - y0) ** 2\n    );\n    return dist <= (d0 + d1);\n  },\n  rectangle(\n    x0: number, y0: number,\n    r0: number, b0: number,\n    x1: number, y1: number,\n    r1: number, b1: number,\n  ): CollisionSide {\n    if (x0 > r1 || x1 > r0 || y0 > b1 || y1 > b0) return CollisionSide.None;\n    const dx = Math.min(r0 - x1, r1 - x0);\n    const dy = Math.min(b0 - y1, b1 - y0);\n    return dx < dy\n      ? x0 > x1 ? CollisionSide.Left : CollisionSide.Right\n      : y0 > y1 ? CollisionSide.Top : CollisionSide.Bottom;\n  },\n  bounds(\n    x0: number, y0: number,\n    r0: number, b0: number,\n    bl: number, bt: number,\n    br: number, bb: number,\n  ): CollisionSide {\n    if (y0 < bt) return CollisionSide.Top;\n    if (b0 > bb) return CollisionSide.Bottom;\n    if (x0 < bl) return CollisionSide.Left;\n    if (r0 > br) return CollisionSide.Right;\n    return CollisionSide.None;\n  }\n};\n","import { init } from \"./main\";\n\n// require('file-loader?name=[name].[ext]!../index.html');\n\nexport const debug: any = {};\n\nwindow.addEventListener(\"load\", () => {\n  const debugEl = document.getElementById(\"debug\") as HTMLDivElement;\n  debug.set = (...msg: string[]) => (debugEl.innerHTML = msg.join(\", \"));\n  debug.add = (...msg: string[]) =>\n    (debugEl.innerHTML += \"<br>\" + msg.join(\", \"));\n\n  const keys: Set<string> = new Set();\n  window.addEventListener(\"keydown\", ({ code }) => keys.add(code));\n  window.addEventListener(\"keyup\", ({ code }) => keys.delete(code));\n\n  const width = 320;\n  const height = 160;\n\n  console.log(document);\n  const screen = document.getElementById(\"screen\") as HTMLCanvasElement;\n\n  screen.width = width;\n  screen.height = height;\n\n  init({\n    screen,\n    width,\n    height,\n    keys,\n    fps: 1000 / 60,\n  });\n});\n","import { Adapter } from \"./adapter\";\nimport { Engine } from \"./engine\";\nimport { Bitmap } from \"./bitmap\";\n\nimport { EntityManager } from \"./ecs/simple.ecs\";\nimport { World } from \"./world\";\nimport { Systems } from \"./systems\";\nimport { Entities } from \"./entities\";\nimport * as components from \"./components\";\n\nimport { benchmark } from \"./utils\";\n\nexport type MainConfig = {\n  width: number;\n  height: number;\n  keys: Set<string>;\n  screen: HTMLCanvasElement;\n  fps: number;\n};\n\nexport const init = async (config: MainConfig): Promise<void> => {\n  console.debug(\"MAIN: init\");\n  const { width, height, keys, screen, fps } = config;\n  const screenCtx = screen.getContext(\"2d\");\n  const screenImageData = screenCtx.getImageData(0, 0, width, height);\n\n  const screenBitmap = Bitmap.from(screenImageData.data.buffer, width, height);\n  const adapter = new Adapter();\n\n  console.debug(\"MAIN: init world\");\n  const world = new World({\n    width,\n    height,\n    gravity: 0.9,\n    friction: 0.95,\n    skyColor: 0xffa09080,\n  });\n\n  console.debug(\"MAIN: init systems\");\n  const {\n    sMovement,\n    sAnimation,\n    sCollideBounds,\n    sDrawing,\n    sControllerRunner,\n    sDrawAnimatedBg,\n    sDrawAnimatedFg,\n  } = Systems(world, screenBitmap);\n\n  console.debug(\"MAIN: init entities\");\n  const em = new EntityManager(components);\n  const {\n    playerEntity,\n    animatedBgLayersEntities,\n    animatedFgLayersEntities,\n    fgBgLayers: {\n      animatedBgPalletes,\n      animatedFgPalletes,\n    }\n  } = await Entities(em, world, adapter, keys);\n\n  console.debug(\"MAIN: attach entities with systems\");\n  const collideBounds = sCollideBounds.setup([playerEntity]);\n  const move = sMovement.setup([playerEntity]);\n  const draw = sDrawing.setup([playerEntity]);\n  const control = sControllerRunner.setup([playerEntity]);\n  const animate = sAnimation.setup([playerEntity]);\n  const animateBg = sDrawAnimatedBg.setup(animatedBgLayersEntities);\n  const animateFg = sDrawAnimatedFg.setup(animatedFgLayersEntities);\n\n  // colors\n  world.skyColor = 0xff4499ff;\n\n  animatedBgPalletes[0].pallete = [0, 0xff3366ee, 0xff2244aa];\n  animatedBgPalletes[1].pallete = [0, 0xff113388, 0xff2255bb];\n  animatedBgPalletes[2].pallete = [0xff303030, 0];\n  animatedBgPalletes[3].pallete = [0xff292929, 0];\n  animatedBgPalletes[4].pallete = [0xff333333, 0xff206090];\n  animatedBgPalletes[5].pallete = [0xff303030, 0xff206090];\n  animatedBgPalletes[6].pallete = [0xff252525, 0xff206090];\n  animatedBgPalletes[7].pallete = [0xff202020, 0xff206090];\n\n  animatedFgPalletes[0].pallete = [0, 0xff101010, 0xff303030];\n\n  // debug tools\n  const renderBench = benchmark(\"render bench\", 2);\n  const updateBench = benchmark(\"update bench\", 2);\n\n  // animated bg\n  const render = (dt: number) => {\n    renderBench.A();\n    screenBitmap.fill(world.skyColor);\n\n    animateBg(dt);\n    animate(dt);\n    draw(dt);\n    animateFg(dt);\n\n    screenCtx.putImageData(screenImageData, 0, 0);\n    renderBench.B();\n  };\n\n  const update = (dt: number) => {\n    updateBench.A();\n    move(dt);\n    collideBounds(dt);\n    control(dt);\n    updateBench.B();\n  };\n\n  console.debug(\"MAIN: run engine\");\n  const engine = new Engine(adapter, fps, update, render, 0.03);\n  engine.start();\n  // TODO: live limited time. for dev only\n  setTimeout(() => {\n    engine.stop();\n    console.debug(\"MAIN: engine stopped\");\n    console.log(renderBench.resultsFps());\n    console.log(updateBench.resultsFps());\n  }, 1000 * 30); // for development only, to stop after 30 sec\n};\n","import { System } from \"./ecs/simple.ecs\";\nimport { World } from \"./world\";\nimport { Bitmap } from \"./bitmap\";\nimport {\n  cPosition,\n  cVelocity,\n  cShape,\n  cSprite,\n  cAnimation,\n  cInput,\n  cMeta,\n} from \"./components\";\nimport {\n  CollisionSide,\n  collision,\n} from \"./helpers\";\n\nimport { debug } from \".\";\n\nconst { rectangle, bounds } = collision;\n\nexport function Systems(world: World, viewport: Bitmap) {\n  console.debug(\"SYSYEMS: initialization\");\n\n  const { width, height } = world;\n  return {\n    /* Collide entities with world bounds */\n    sCollideBounds: new System(\n      { cPosition, cVelocity, cShape, cMeta },\n      (_, comp, entities) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { w, h } = comp.cShape.storage;\n        const { air } = comp.cMeta.storage;\n        for (const e of entities) {\n          const eRight = x[e] + w[e];\n          const eBottom = y[e] + h[e];\n          const collisionSide = bounds(\n            x[e], y[e], eRight, eBottom,\n            0, 0, width, height,\n          );\n          if (collisionSide == CollisionSide.None) continue;\n          switch (collisionSide) {\n            case CollisionSide.Left: vx[e] = 0; x[e] = 0; break;\n            case CollisionSide.Right: vx[e] = 0; x[e] = width - w[e]; break;\n            case CollisionSide.Top: vy[e] = 1; y[e] = 0; break;\n            case CollisionSide.Bottom: vy[e] = 0; y[e] = height - h[e]; air[e] = false; break;\n          }\n        }\n      },\n    ),\n\n    /* Collide entities with a world tiles */\n    sCollideLevel: new System(\n      { cPosition, cVelocity, cShape, cMeta },\n      (_, comp, entities) => {\n        throw new Error(\"Not implemented yet\");\n        // get entity cell cx, cy - current row and column\n        // get index world.level.collisions[top * columns + left]\n        // and collide with top, left, bottom, right\n        // input: same as collide shapes + level collision map\n        // algo:\n        // for all entities:\n        //  get top, left, right, bottom cells (ghost, no actualy an object)\n        //  check if collide for each side\n      }\n    ),\n\n    /* Collide entities from groupA with entities from groupB */\n    sCollideShapes: new System(\n      { cPosition, cVelocity, cShape, cMeta },\n      (_, comp, entities, blocks) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { w, h } = comp.cShape.storage;\n        const { air } = comp.cMeta.storage;\n        for (const e of entities) {\n          const eRight = x[e] + w[e];\n          const eBottom = y[e] + h[e];\n          let totalCollisions = 0;\n          for (const b of blocks) {\n            if (totalCollisions > 2) break;\n            const bRight = x[b] + w[b];\n            const bBottom = y[b] + h[b];\n            const collisionSide = rectangle(\n              x[e], y[e], eRight, eBottom,\n              x[b], y[b], bRight, bBottom,\n            );\n            // TODO: remove debug\n            debug.set(collisionSide.toUpperCase(), air[e] ? \"^\" : \"_\", `${x[e].toFixed(2).padStart(6, \"0\")}:${y[e].toFixed(2).padStart(6, \"0\")}`, vy[e].toFixed(2));\n            if (collisionSide === CollisionSide.None) continue;\n            if (collisionSide !== CollisionSide.Bottom) console.log(collisionSide,b);\n            totalCollisions++;\n            switch (collisionSide) {\n              case CollisionSide.Bottom: vy[e] = 0; y[e] = y[b] - h[e]; air[e] = false; break;\n              case CollisionSide.Right: vx[e] = 0; x[e] = x[b] - w[e] - 0.01; break;\n              case CollisionSide.Left: vx[e] = 0; x[e] = bRight + 0.01; break;\n              case CollisionSide.Top: vy[e] = 1; y[e] = bBottom; break;\n            }\n          }\n        }\n      },\n    ),\n\n    /* Move entity using velocity values */\n    sMovement: new System(\n      { cPosition, cVelocity, cMeta },\n      (dt, comp, entities) => {\n        const { x, y } = comp.cPosition.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air } = comp.cMeta.storage;\n        const { friction, gravity } = world;\n        for (const e of entities) {\n          x[e] += vx[e] * dt;\n          y[e] += vy[e] * dt;\n          // TODO: think to move it separately, to avoid dependency with cMeta.air\n          vx[e] *= friction;\n          vy[e] += gravity;\n        }\n      },\n    ),\n\n    /* Render frame of spritesheet by index */\n    sDrawing: new System({ cSprite, cPosition }, (_, comp, entities) => {\n      const { sprites, spriteIdx, flipped, offsetX, offsetY } = comp.cSprite.storage;\n      const { x, y } = comp.cPosition.storage;\n      for (const e of entities) {\n        const half = sprites[e].length / 2;\n        const idx = flipped[e] ? spriteIdx[e] + half : spriteIdx[e];\n        viewport.draw(\n          sprites[e][idx],\n          Math.round(offsetX[e] + x[e]),\n          Math.round(offsetY[e] + y[e]),\n        );\n      }\n    }),\n\n    /* Calculate next frame needed to draw */\n    sAnimation: new System({ cAnimation, cSprite }, (dt, comp, entities) => {\n      const { animations, current, length, time, coef } = comp.cAnimation.storage;\n      const { spriteIdx } = comp.cSprite.storage;\n      for (const e of entities) {\n        const frameTime = (time[e] + dt * coef[e]) % length[e];\n        spriteIdx[e] = animations[e][current[e]][frameTime | 0];\n        time[e] = frameTime;\n      }\n    }),\n\n    /* Listen for user input */\n    sController: new System(\n      { cVelocity, cInput, cSprite, cMeta, cAnimation },\n      (_, comp, entities) => {\n        const { flipped } = comp.cSprite.storage;\n        const { current } = comp.cAnimation.storage;\n        const { keys } = comp.cInput.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air, speed } = comp.cMeta.storage;\n        for (const e of entities) {\n          if (!keys[e].size) {\n            current[e] = air[e] ? 2 : 0;\n            continue;\n          }\n          if (keys[e].has(\"KeyQ\"))      vx[e] -= speed[e], current[e] = 1, flipped[e] = true;\n          else if (keys[e].has(\"KeyW\")) vx[e] += speed[e], current[e] = 1, flipped[e] = false;\n          if (keys[e].has(\"KeyP\"))      !air[e] && (air[e] = true, vy[e] = -10);\n        }\n      },\n    ),\n\n    /*Listen for user input for runner mode*/\n    sControllerRunner: new System(\n      { cVelocity, cInput, cMeta, cAnimation },\n      (_, comp, entities) => {\n        const { current, coef } = comp.cAnimation.storage;\n        const { keys } = comp.cInput.storage;\n        const { vx, vy } = comp.cVelocity.storage;\n        const { air, speed } = comp.cMeta.storage;\n        for (const e of entities) {\n          if (!keys[e].size) {\n            current[e] = air[e] ? 2 : 1;\n            coef[e] = 0.4\n            continue;\n          }\n          if (keys[e].has(\"KeyQ\"))      vx[e] -= speed[e], coef[e] = 0.2, current[e] = 1;\n          else if (keys[e].has(\"KeyW\")) vx[e] += speed[e], coef[e] = 0.8, current[e] = 1;\n          if (keys[e].has(\"KeyP\"))      !air[e] && (air[e] = true, vy[e] = -10);\n        }\n      },\n    ),\n\n    // TODO: ability to add modifiers to the system\n    // Modifier can store 32 and 48\n    // Also it can store pointer to World\n    /* Dynamic background */\n    sDrawAnimatedBg: new System(\n      { cSprite, cAnimation },\n      (dt, comp, entities) => {\n        const { offsetX, offsetY, sprites, spriteIdx } = comp.cSprite.storage;\n        const { time, coef, animations } = comp.cAnimation.storage;\n        // use animations to build up new layouts\n        for (const e of entities) {\n          const frameTime = (time[e] + dt * coef[e]) % width;\n          viewport.draw(\n            sprites[e][spriteIdx[e]],\n            Math.round(offsetX[e] + frameTime),\n            Math.round(offsetY[e]),\n          );\n          time[e] = frameTime;\n        }\n      }\n    ),\n    sDrawAnimatedFg: new System(\n      { cSprite, cAnimation },\n      (dt, comp, entities) => {\n        const { offsetX, offsetY, sprites, spriteIdx } = comp.cSprite.storage;\n        const { time, coef } = comp.cAnimation.storage;\n        for (const e of entities) {\n          const frameTime = (time[e] + dt * coef[e]) % 384;\n          viewport.draw(\n            sprites[e][spriteIdx[e]],\n            Math.round(offsetX[e] + frameTime),\n            Math.round(offsetY[e]),\n          );\n          time[e] = frameTime;\n        }\n      }\n    ),\n  };\n}\n","export class ContinualList<T> {\n  constructor(\n    readonly schema: T,\n    readonly data: T[] = [],\n    private next = [0],\n  ) { }\n\n  push(...es: T[]): number[] {\n    const inserted: number[] = [];\n    for (const e of es) {\n      const i = this.next.pop() || this.data.length;\n      this.data[i] = e || this.schema;\n      inserted.push(i);\n      // TODO: rewrite to efficient fast and elegant\n      // we can use capacity to allocate memory at init\n      if (this.next.length == 0) this.next.push(this.data.length);\n    }\n    return inserted;\n  }\n\n  delete(...is: number[]): number[] {\n    for (const i of is) {\n      // because we cant store nulls\n      this.data[i] = this.schema;\n      this.next.push(i);\n    }\n    return is;\n  }\n\n  // set data(e: T) {\n  //   this\n  // }\n  //\n  get length(): number {\n    return this.data.length - this.vacant.length + 1;\n  }\n\n  get vacant(): number[] {\n    return this.next;\n  }\n}\n\n// or maybe we can do this?\nexport class ContinualArray extends Array {\n}\n\n\n\nexport const benchmark = (name = \"default\", calcMiddleRate = 10, fixedDigit = 4) => {\n  let minimumtime = Infinity;\n  let maximumtime = 0;\n  let lasttime = 0;\n  let calcMiddleIter = calcMiddleRate;\n\n  const history = [];\n  const middles = [];\n\n  const A = () => lasttime = performance.now();\n\n  const B = () => {\n    const dt = performance.now() - lasttime;\n    if (dt <= 0 && dt >= Infinity) {\n      console.log(\"lol\", dt);\n      return;\n    }\n    calcMiddleIter--;\n    history.push(dt);\n    if (minimumtime > dt) minimumtime = dt;\n    if (maximumtime < dt) maximumtime = dt;\n    if (calcMiddleIter > 0) return;\n    calcMiddleIter = calcMiddleRate;\n    middles.push(middle(history));\n    clear();\n  }\n  const fps = (time: number) => 1 / (time * 0.001);\n  const clear = () => history.length = 0;\n  const middle = (arr: number[]) => arr.reduce((acc, v) => acc += v, 0) / arr.length;\n  const fixed = (num: number) => +num.toFixed(fixedDigit);\n  const filter = (num: number) => num > 0 && num < Infinity;\n\n  const resultsTime = () => ({\n    name,\n    min: fixed(minimumtime),\n    max: fixed(maximumtime),\n    middles: middles.filter(filter).map(fixed),\n  });\n\n  const resultsFps = () => ({\n    name,\n    maxFps: fixed(fps(minimumtime)),\n    minFps: fixed(fps(maximumtime)),\n    fps: fixed(fps(middle(middles))),\n    middlesFps: middles.filter(filter).map(fps).map(fixed),\n  })\n\n  return { A, B, resultsTime, resultsFps };\n}\n\n","export class World {\n  readonly width: number;\n  readonly height: number;\n  public gravity: number;\n  public friction: number;\n  public skyColor: number;\n  private currentLevel: string;\n  private levelList: Map<string, Level>;\n\n  constructor({ width, height, gravity, friction, skyColor }) {\n    this.width = width;\n    this.height = height;\n    this.gravity = gravity;\n    this.friction = friction;\n    this.skyColor = skyColor;\n\n    this.currentLevel = \"start\";\n    this.levelList = new Map();\n  }\n\n  addLevel(level: Level): void {\n    this.levelList.set(level.name, level);\n  }\n\n  getCurrentLevel(): Level {\n    return this.levelList.get(this.currentLevel);\n  }\n}\n\n/*\nIDEA: to define cell type I can use bits.\nfor example first bit is block/notblock\n*/\nexport enum LevelCellType {\n  Block = 0b0001,\n}\n\nexport type LevelCell = {\n  sprite: string;\n  spriteIdx: number;\n  type: number;\n};\n\nexport type LevelConfig = {\n  map: number[][];\n  mapping: { [key: number]: LevelCell };\n};\n\n// TODO: rewrite implementation and data structure\nexport class Level {\n  // TODO: use LevelCell type for map property\n  public collisions: boolean[][];\n  readonly width: number;\n  readonly height: number;\n  constructor(\n    readonly name: string,\n    private map: number[][],\n    private mapping: Map<number, LevelCell>,\n  ) {\n    this.width = map[0].length;\n    this.height = map.length;\n    this.collisions = Array(this.height).fill(Array(this.width).fill(false));\n    this.refreshCollistions();\n  }\n\n  static from(name: string, config: LevelConfig): Level {\n    // TODO: make normal level parser\n    const { map, mapping } = config;\n    const parsedMapping = new Map<number, LevelCell>();\n    Object.entries(mapping).forEach(([key, value]) =>\n      parsedMapping.set(+key, value as LevelCell),\n    );\n    Object.entries(mapping).forEach(([key, value]) => {\n      // const cell: LevelCell = {}\n    });\n    return new Level(name, map, parsedMapping);\n  }\n\n  private filterMap(type: LevelCellType): boolean[][] {\n    const filtered = this.map.map((row) => row.map((col) => !!(col & type)));\n    return filtered;\n  }\n\n  private refreshCollistions(): void {\n    this.collisions = this.filterMap(LevelCellType.Block);\n  }\n}\n\n\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}